[
    {
        "id": "bee07e0a.32a9",
        "type": "tab",
        "label": "Demo app",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3b1dee12.2d18d2",
        "type": "tab",
        "label": "Demo App Index",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b046fa71.84ef78",
        "type": "tab",
        "label": "coreAppIndex",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc20c6e0.0feb98",
        "type": "tab",
        "label": "scalarDevicePlotter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a7b9d689.b8a5e8",
        "type": "tab",
        "label": "scalarDeviceArchivePlotter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b94899c9.b16088",
        "type": "tab",
        "label": "vectorDevicePlotter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3e89bdec.f16662",
        "type": "tab",
        "label": "vectorDeviceArchivePlotter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f695378f.b711c8",
        "type": "tab",
        "label": "deviceViewer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ae804a7e.55fe08",
        "type": "tab",
        "label": "deviceEditor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "66b972e4.6895bc",
        "type": "tab",
        "label": "alarm-scanner",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e17f7487.2a78e8",
        "type": "tab",
        "label": "dataLogger",
        "disabled": false,
        "info": ""
    },
    {
        "id": "372efc91.0669c4",
        "type": "tab",
        "label": "database Utilities",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ca529822.9112f8",
        "type": "subflow",
        "name": "Core HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "55363cbd.c229e4"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "5c204860.bb24a8",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "62459d79.bdca54"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Chill Detector",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "a77ab212.bfa86",
        "type": "mongodb",
        "z": "",
        "hostname": "$(MONGODBIP)",
        "port": "27017",
        "db": "blinky-lite",
        "name": "mongodb"
    },
    {
        "id": "3c1c519e.83272e",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarDeviceArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "8d993328.9d4c4",
        "type": "websocket-listener",
        "z": "",
        "path": "/scalarDevicePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c933d8a.80b7a2",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorDevicePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "869ccabd.6400e8",
        "type": "websocket-listener",
        "z": "",
        "path": "/vectorDeviceArchivePlotter/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3d5cd97c.77df96",
        "type": "websocket-listener",
        "z": "",
        "path": "/deviceViewer/websocket",
        "wholemsg": "false"
    },
    {
        "id": "84d80994.260508",
        "type": "mqtt-broker",
        "z": "",
        "name": "blinky-lite-controlbox-xx",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "2b65833e.87911c",
        "type": "websocket-listener",
        "z": "",
        "path": "/alarmScanner/websocket",
        "wholemsg": "false"
    },
    {
        "id": "3c9dcaab.a3f3c6",
        "type": "websocket-listener",
        "z": "",
        "path": "/deviceEditor/websocket",
        "wholemsg": "false"
    },
    {
        "id": "d8c18f23.a32de",
        "type": "websocket-listener",
        "z": "",
        "path": "/blinky-lite-demo-2/websocket",
        "wholemsg": "false"
    },
    {
        "id": "92cdecbf.0d545",
        "type": "websocket-listener",
        "z": "",
        "path": "/blinky-lite-demo-1/websocket",
        "wholemsg": "false"
    },
    {
        "id": "a1d149c8.df9b88",
        "type": "http in",
        "z": "a7b9d689.b8a5e8",
        "name": "HTTP GET",
        "url": "/scalarDeviceArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "f196bf10.e783a"
            ]
        ]
    },
    {
        "id": "1c59d82a.896018",
        "type": "websocket in",
        "z": "a7b9d689.b8a5e8",
        "name": "Socket In",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "5660e69.e917918"
            ]
        ]
    },
    {
        "id": "aa9750ce.f38ed",
        "type": "websocket out",
        "z": "a7b9d689.b8a5e8",
        "name": "Socket Out",
        "server": "3c1c519e.83272e",
        "client": "",
        "x": 1330,
        "y": 340,
        "wires": []
    },
    {
        "id": "5660e69.e917918",
        "type": "json",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "36df735b.77b3dc"
            ]
        ]
    },
    {
        "id": "36df735b.77b3dc",
        "type": "switch",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevArchive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "27f42edd.fab892"
            ],
            [
                "34274507.28ba0a"
            ],
            [
                "71f88bbe.d01444"
            ]
        ]
    },
    {
        "id": "6e4a6efd.c2022",
        "type": "mongodb in",
        "z": "a7b9d689.b8a5e8",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "e285da1.6e02e28"
            ]
        ]
    },
    {
        "id": "27f42edd.fab892",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "6e4a6efd.c2022"
            ]
        ]
    },
    {
        "id": "fa44db0f.a97ee8",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'scalar')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 300,
        "wires": [
            [
                "aa9750ce.f38ed"
            ]
        ]
    },
    {
        "id": "34274507.28ba0a",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "Find device",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection['value'] = 1;\nnewMsg.projection['alarm'] = 1;\nnewMsg.projection['unit'] = 1;\nnewMsg.projection['time'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['archive_period'] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "6e4a6efd.c2022"
            ]
        ]
    },
    {
        "id": "e285da1.6e02e28",
        "type": "switch",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevArchive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "fa44db0f.a97ee8"
            ],
            [
                "9d20efdd.4a9b5"
            ],
            [
                "9ed224c1.dd9228"
            ]
        ]
    },
    {
        "id": "9d20efdd.4a9b5",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "put device",
        "func": "return {\n    topic:'putDevValue',\n    payload:{\n        topic           : 'putDevValue',\n        payload         : msg.payload[0],\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 950,
        "y": 340,
        "wires": [
            [
                "aa9750ce.f38ed"
            ]
        ]
    },
    {
        "id": "b24507d5.499a58",
        "type": "mongodb in",
        "z": "a7b9d689.b8a5e8",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in archiver",
        "collection": "archiver",
        "operation": "find",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "d2bf69c9.2bad58"
            ]
        ]
    },
    {
        "id": "71f88bbe.d01444",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "Get device_id for Archive",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    startTime       : msg.payload.startTime,\n    stopTime        : msg.payload.stopTime,\n    projection      : {}\n};\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 1;\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 220,
        "wires": [
            [
                "6e4a6efd.c2022"
            ]
        ]
    },
    {
        "id": "9ed224c1.dd9228",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "find in archiver",
        "func": "var newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    plotDevice      : msg.plotDevice,\n    payload         : \n    {\n        time    :   {'$gt': msg.startTime, '$lt': msg.stopTime},\n        device_id   :   msg.payload[0]._id\n    },\n    startTime       : msg.startTime,\n    stopTime        : msg.stopTime,\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 380,
        "wires": [
            [
                "b24507d5.499a58"
            ]
        ]
    },
    {
        "id": "d2bf69c9.2bad58",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "putDevArchive",
        "func": "//if (msg.payload.length < 1) return null;\n//if (msg.payload[0].type != 'scalar') return null;\nfunction sortByKey(array, key) \n{\n    return array.sort(\n        function(a, b) \n        {\n            var x = a[key]; var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        });\n}\nsortByKey(msg.payload, 'time');\nvar data = [];\nvar npts = msg.payload.length;\nvar step = 1;\nfor (var ii = 0; ii < npts; ++ii)\n{\n    var ipt = Math.round(ii * step);\n    data[ii] = \n    {\n        value   : msg.payload[ipt].value, \n        time    : msg.payload[ipt].time\n    }\n}\nreturn {\n    topic:'putDevArchive',\n    payload:{\n        topic           : 'putDevArchive',\n        payload         : data,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 380,
        "wires": [
            [
                "aa9750ce.f38ed"
            ]
        ]
    },
    {
        "id": "b1f29722.e81d28",
        "type": "function",
        "z": "a7b9d689.b8a5e8",
        "name": "Test Find device",
        "func": "var newMsg = \n{\n    topic           : 'test',\n    userID          : 1234,\n    plotDevice      : 1,\n    payload         : \n    {\n        sys01   : \"R3\",\n        sys02   : \"rfroom\",\n        sys03   : \"02\",\n        sys04   : \"diag\",\n        device  : \"oo\",\n        attr    : \"phaseShift\",\n        prop    : \"reading\",\n    },\n/*\n    projection      : \n    {\n        value           :   1,\n        time            :   1,\n        type            :   1,\n        archive_period  :   1,\n        status          :   1,\n        _id             :   0\n    }\n*/\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 460,
        "wires": [
            [
                "51a62b7b.5e44e4"
            ]
        ]
    },
    {
        "id": "51a62b7b.5e44e4",
        "type": "mongodb in",
        "z": "a7b9d689.b8a5e8",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 610,
        "y": 460,
        "wires": [
            [
                "80a4b780.ff5198"
            ]
        ]
    },
    {
        "id": "80a4b780.ff5198",
        "type": "debug",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 770,
        "y": 460,
        "wires": []
    },
    {
        "id": "d6c7248e.e671c8",
        "type": "inject",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 220,
        "y": 460,
        "wires": [
            [
                "b1f29722.e81d28"
            ]
        ]
    },
    {
        "id": "47ff9adb.808a04",
        "type": "template",
        "z": "a7b9d689.b8a5e8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">Tr</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading\">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading\">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0', href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_0\" onchange=\"sysSelected(0,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_1\" onchange=\"sysSelected(0,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_2\" onchange=\"sysSelected(0,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_3\" onchange=\"sysSelected(0,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_4\" onchange=\"sysSelected(0,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_5\" onchange=\"sysSelected(0,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_6\" onchange=\"sysSelected(0,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_0\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv1', href='' target='_blank' download=\"data1.csv\" class=\"csv-linked\">2</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_0\" onchange=\"sysSelected(1,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_1\" onchange=\"sysSelected(1,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_2\" onchange=\"sysSelected(1,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_3\" onchange=\"sysSelected(1,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_4\" onchange=\"sysSelected(1,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_5\" onchange=\"sysSelected(1,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_6\" onchange=\"sysSelected(1,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv2', href='' target='_blank' download=\"data2.csv\" class=\"csv-linked\">3</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_0\" onchange=\"sysSelected(2,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_1\" onchange=\"sysSelected(2,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_2\" onchange=\"sysSelected(2,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_3\" onchange=\"sysSelected(2,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_4\" onchange=\"sysSelected(2,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_5\" onchange=\"sysSelected(2,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_6\" onchange=\"sysSelected(2,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv3', href='' target='_blank' download=\"data3.csv\" class=\"csv-linked\">4</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_0\" onchange=\"sysSelected(3,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_1\" onchange=\"sysSelected(3,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_2\" onchange=\"sysSelected(3,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_3\" onchange=\"sysSelected(3,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_4\" onchange=\"sysSelected(3,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_5\" onchange=\"sysSelected(3,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_6\" onchange=\"sysSelected(3,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n          </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"5000\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n       </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "4414ba.159a1b48"
            ]
        ]
    },
    {
        "id": "941e8858.e22318",
        "type": "mongodb out",
        "z": "a7b9d689.b8a5e8",
        "mongodb": "a77ab212.bfa86",
        "name": "Remove",
        "collection": "devices",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 580,
        "y": 560,
        "wires": []
    },
    {
        "id": "f196bf10.e783a",
        "type": "template",
        "z": "a7b9d689.b8a5e8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysSelectValue = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numPlotDevices = 4;\n        var plotAxis = ['y1', 'y1', 'y1', 'y1'];\n        var plotPts = [false, false, false, false];\n        var validDevice = [];\n        var numSys = sysName.length;\n        var numDeviceRequested = 0;\n        var numDeviceReceived = 0;\n        var getDevValueTimer = [];\n        var csvFile = [null,null,null,null];\n        var traceData = [];\n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                sysSelect[idev] = [];\n                for (var isys = 0; isys < numSys; ++isys)\n                {\n                    sysSelect[idev][isys] = document.getElementById('sysSelect_' + idev.toString() + '_'+ isys.toString());\n                }\n                sysSelectValue[idev] = document.getElementById('sysSelectValue_' + idev.toString());\n                validDevice[idev] = false;\n                $('#unit_'+ idev.toString()).html('');\n        \n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-SE'));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString());\n            $( \"#stopDate\" ).val(now.toLocaleString());\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            getDevValueTimer = setInterval(getDevValue,1000);\n        });\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevArchive':\n                            putDevArchive(msg);\n                            break;\n                        case 'putDevValue':\n                            putDevValue(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                for (var idev = 0; idev < numPlotDevices; ++idev)\n                {\n                    ws.send(JSON.stringify(\n                    {\n                        topic       : 'getDevSystem',\n                        system      : sysName[0],\n                        payload     : {},\n                        'userID'    : userID,\n                        plotDevice      : idev,\n                        sysSelectIndex  : 0,\n                    }));\n                }\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.plotDevice, systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.plotDevice][systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(plotDevice, sysSelectIndex)\n        {\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[plotDevice][isys].firstChild)\n                {\n                    sysSelect[plotDevice][isys].removeChild(sysSelect[plotDevice][isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[plotDevice][sysSelectIndex].appendChild(opt);\n            sysSelectValue[plotDevice].innerHTML = '';\n            $('#unit_'+ plotDevice.toString()).html('');\n            $('#csv'+ plotDevice.toString()).removeAttr(\"href\");\n            $('#csv'+ plotDevice.toString()).css('color', 'white');\n            $('#csv'+ plotDevice.toString()).css('text-decoration', 'none');\n            $('#csv'+ plotDevice.toString()).css('font-weight', 'bold');\n            validDevice[plotDevice] = false;\n        }\n        function sysSelected(plotDevice, sysSelectIndex)\n        {\n            if (sysSelect[plotDevice][sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[plotDevice][sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[plotDevice][sysSelectIndex].removeChild(sysSelect[plotDevice][sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        plotDevice      : plotDevice,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[plotDevice][isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice[plotDevice] = true;\n            }\n        \n        }\n        function getDevName(plotDevice)\n        {\n            if (!validDevice[plotDevice]) return;\n            var devName = sysSelect[plotDevice][0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[plotDevice][isys].value;\n            }\n            return devName;\n        }\n        function getDevValue()\n        {\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           : 'getDevValue',\n                            payload         : {},\n                            userID          : userID,\n                            plotDevice      : idev,\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function putDevValue(deviceData)\n        {\n            if (deviceData.payload.type == 'scalar')\n            {\n                sysSelectValue[deviceData.plotDevice].innerHTML = deviceData.payload.value;\n                $('#unit_'+ deviceData.plotDevice.toString()).html(deviceData.payload.unit);\n        \n                var valueColor = 'black';\n                if (deviceData.payload.alarm > 0) valueColor = 'orange';\n                if (deviceData.payload.alarm > 2) valueColor = 'red';\n                $('#sysSelectValue_'+ deviceData.plotDevice.toString()).css(\"color\", valueColor);\n                \n        \n            }\n        }\n        function putDevArchive(deviceData)\n        {\n            if (deviceData.payload.length < 1)\n            {\n              alert('No Data found');\n              $('#plotSetupTable').show();\n              return;\n            }\n            $('#timePlot').show();\n            $('#plotSetupTable').show();\n            makeCsvFile(deviceData);\n            var data = [];\n            var maxPtsToPlot = Number($( '#maxPtsToPlot').val());\n            var npts = deviceData.payload.length;\n            var step = 1;\n            if (deviceData.payload.length > maxPtsToPlot)\n            {\n                npts = maxPtsToPlot;\n                step = deviceData.payload.length / maxPtsToPlot;\n            }\n            var modeType = 'lines';\n            if (plotPts[deviceData.plotDevice]) modeType = 'markers';\n            var trace = {\n              x: [],\n              y: [],\n              name: plotAxis[deviceData.plotDevice] + ' ' + getDevName(deviceData.plotDevice)  + ' (' + $(\"#unit_\" + deviceData.plotDevice.toString()).text() + ')',\n              yaxis: plotAxis[deviceData.plotDevice],\n              type: 'scatter',\n              mode: modeType\n            }\n            var startDate = new Date($( \"#startDate\" ).val()).getTime();\n            for (var ii = 0; ii < npts; ++ii)\n            {\n                var ipt = Math.round(ii * step);\n                trace.x[ii] = (deviceData.payload[ipt].time - startDate)/ 3600000.0;\n                trace.y[ii] = deviceData.payload[ipt].value;\n            }\n            traceData.push(trace);\n            ++numDeviceReceived;\n            if (numDeviceRequested == numDeviceReceived)\n            {\n                var layout =\n                {\n                  showlegend: true,\n                  legend:\n                  {\n                    x: 0,\n                    y: 1.35\n                  },\n        \n        //          title: $( \"#startDate\" ).val() + ' - ' + $( \"#stopDate\" ).val(),\n                  xaxis:\n                  {\n                    title: 'Hours since ' + $( \"#startDate\" ).val() + ' until ' + $( \"#stopDate\" ).val(),\n                  },\n                  yaxis:\n                  {\n                    title: 'y1',\n                  },\n                  yaxis2:\n                  {\n                    title: 'y2',\n                    overlaying: 'y',\n                    side: 'right'\n                  }\n                };\n                Plotly.newPlot('timePlot', traceData, layout);\n            }\n        }\n        makeCsvFile = function (deviceData)\n        {\n            var dataString = '';\n        \n            dataString = dataString + 'Device,' + getDevName(deviceData.plotDevice) + '\\n';\n            dataString = dataString + 'StartDate,' + new Date(deviceData.payload[0].time).toISOString() + '\\n';\n            dataString = dataString + 'StartDate (mS),' + deviceData.payload[0].time.toString() + '\\n';\n            dataString = dataString + 'Time (sec),' + sysSelect[deviceData.plotDevice][4].value + '-' + sysSelect[deviceData.plotDevice][5].value + '\\n';\n            for (var ii = 0; ii < deviceData.payload.length; ++ii)\n            {\n                var value = deviceData.payload[ii].value;\n                if (isNaN(value) || (value == null))\n                {\n                    value = 'NaN';\n                }\n                else\n                {\n                    value = value.toString();\n                }\n                dataString = dataString + ((deviceData.payload[ii].time - deviceData.payload[0].time)/1000).toString() + ',';\n                dataString = dataString + value + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[deviceData.plotDevice] !== null) {\n              window.URL.revokeObjectURL(csvFile[deviceData.plotDevice]);\n            }\n        \n            csvFile[deviceData.plotDevice] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ deviceData.plotDevice.toString()).css('color', 'blue');\n            $('#csv'+ deviceData.plotDevice.toString()).css('text-decoration', 'underline');\n            $('#csv'+ deviceData.plotDevice.toString()).css('font-weight', 'bold');\n            $('#csv'+ deviceData.plotDevice.toString()).attr(\"href\", csvFile[deviceData.plotDevice]);\n            $('#csv'+ deviceData.plotDevice.toString()).attr(\"download\", getDevName(deviceData.plotDevice) + '.csv');\n        \n        }\n        function getArchiveData()\n        {\n            numDeviceRequested = 0;\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    ++numDeviceRequested;\n                }\n            };\n            if (numDeviceRequested < 1) return;\n        \n            numDeviceReceived = 0;\n            var startDate = new Date($( \"#startDate\" ).val());\n            var stopDate = new Date($( \"#stopDate\" ).val());\n            $('#plotSetupTable').hide();\n            $('#timePlot').hide();\n            traceData = [];\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                $('#csv'+ idev.toString()).removeAttr(\"href\");\n                $('#csv'+ idev.toString()).css('color', 'white');\n                $('#csv'+ idev.toString()).css('text-decoration', 'none');\n                $('#csv'+ idev.toString()).css('font-weight', 'bold');\n        \n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           :   'getDevArchive',\n                            payload         :   {},\n                            userID          :   userID,\n                            plotDevice      :   idev,\n                            startTime       :   startDate.getTime(),\n                            stopTime        :   stopDate.getTime(),\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function selectAxis(plotDevice,axis)\n        {\n          plotAxis[plotDevice] = axis;\n        }\n        function selectPts(plotDevice,axis)\n        {\n          plotPts[plotDevice] = $(\"#pts_\" + plotDevice.toString()).is(':checked');\n        }",
        "output": "str",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "b755b3b5.e3bcf"
            ]
        ]
    },
    {
        "id": "d8aea031.7f89d",
        "type": "http in",
        "z": "dc20c6e0.0feb98",
        "name": "HTTP GET",
        "url": "/scalarDevicePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "7b9e1c55.c445c4"
            ]
        ]
    },
    {
        "id": "761db118.51922",
        "type": "websocket in",
        "z": "dc20c6e0.0feb98",
        "name": "Socket In",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "5ddca0da.79e6e"
            ]
        ]
    },
    {
        "id": "472ae883.652f08",
        "type": "websocket out",
        "z": "dc20c6e0.0feb98",
        "name": "Socket Out",
        "server": "8d993328.9d4c4",
        "client": "",
        "x": 1150,
        "y": 160,
        "wires": []
    },
    {
        "id": "5ddca0da.79e6e",
        "type": "json",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "f445d1dd.72e4"
            ]
        ]
    },
    {
        "id": "f445d1dd.72e4",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "7ef5d7af.5aeed8"
            ],
            [
                "ccb4a4a2.49a2e8"
            ]
        ]
    },
    {
        "id": "7ef5d7af.5aeed8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 0;\nnewMsg.projection['type'] = 1;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "a40e5157.4077d"
            ]
        ]
    },
    {
        "id": "b6d95279.1b494",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">Tr</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"11%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n                <td width=\"8%\" align=\"center\"><span class=\"tableHeading\">value</span></td>\n                <td width=\"7%\" align=\"center\"><span class=\"tableHeading\">unit</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">y1</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">y2</span></td>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">pt</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">1</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_0\" onchange=\"sysSelected(0,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_1\" onchange=\"sysSelected(0,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_2\" onchange=\"sysSelected(0,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_3\" onchange=\"sysSelected(0,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_4\" onchange=\"sysSelected(0,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_5\" onchange=\"sysSelected(0,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_6\" onchange=\"sysSelected(0,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_0\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_0\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_0y1\" type=\"radio\" name=\"plotAxis_0\"  value=\"y1\"  onchange='selectAxis(0,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_0y2\" type=\"radio\" name=\"plotAxis_0\"  value=\"y2\"  onchange='selectAxis(0,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_0\" type=\"checkbox\" name=\"pts_0\"  value=\"pts\"  onchange='selectPts(0)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">2</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_0\" onchange=\"sysSelected(1,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_1\" onchange=\"sysSelected(1,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_2\" onchange=\"sysSelected(1,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_3\" onchange=\"sysSelected(1,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_4\" onchange=\"sysSelected(1,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_5\" onchange=\"sysSelected(1,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_6\" onchange=\"sysSelected(1,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_1\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_1y1\" type=\"radio\" name=\"plotAxis_1\"  value=\"y1\"  onchange='selectAxis(1,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_1y2\" type=\"radio\" name=\"plotAxis_1\"  value=\"y2\"  onchange='selectAxis(1,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_1\" type=\"checkbox\" name=\"pts_1\"  value=\"pts\"  onchange='selectPts(1)'></td>\n            </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">3</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_0\" onchange=\"sysSelected(2,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_1\" onchange=\"sysSelected(2,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_2\" onchange=\"sysSelected(2,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_3\" onchange=\"sysSelected(2,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_4\" onchange=\"sysSelected(2,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_5\" onchange=\"sysSelected(2,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_6\" onchange=\"sysSelected(2,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_2\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_2y1\" type=\"radio\" name=\"plotAxis_2\"  value=\"y1\"  onchange='selectAxis(2,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_2y2\" type=\"radio\" name=\"plotAxis_2\"  value=\"y2\"  onchange='selectAxis(2,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_2\" type=\"checkbox\" name=\"pts_2\"  value=\"pts\"  onchange='selectPts(2)'></td>\n           </tr>\n            <tr>\n                <td align=\"center\"><span class=\"tableText\">4</span></td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_0\" onchange=\"sysSelected(3,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_1\" onchange=\"sysSelected(3,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_2\" onchange=\"sysSelected(3,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_3\" onchange=\"sysSelected(3,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_4\" onchange=\"sysSelected(3,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_5\" onchange=\"sysSelected(3,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_6\" onchange=\"sysSelected(3,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_3\"></span></td>\n                <form action=\"\" >\n                   <td align=\"center\"><input id=\"plotAxis_3y1\" type=\"radio\" name=\"plotAxis_3\"  value=\"y1\"  onchange='selectAxis(3,\"y1\")' checked></td>\n                   <td align=\"center\"><input id=\"plotAxis_3y2\" type=\"radio\" name=\"plotAxis_3\"  value=\"y2\"  onchange='selectAxis(3,\"y2\")' ></td>\n                </form>\n                <td align=\"center\"><input id=\"pts_3\" type=\"checkbox\" name=\"pts_3\"  value=\"pts\"  onchange='selectPts(3)'></td>\n          </tr>\n        </table>\n    </div>\n    <div>\n        <div class='row'>\n            <div class='col-md-6'>\n                <table>\n                    <tr>\n                        <td width=50%  align=\"center\"class=\"tableHeading\">Span</td>\n                        <td width=50% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                         <td align=\"center\">\n                            <input class=\"form-control\" id=\"plotLength\" type=\"text\" value=\"300\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button\" id=\"startPlotButton\" type=\"button\" onclick=\"startPlot()\" disabled>Start Plot</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Time Plot</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n     </div>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "8a439be9.030ab8"
            ]
        ]
    },
    {
        "id": "2b6693c7.697dbc",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'scalar')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 140,
        "wires": [
            [
                "472ae883.652f08"
            ]
        ]
    },
    {
        "id": "ccb4a4a2.49a2e8",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "Find device",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection['value'] = 1;\nnewMsg.projection['unit'] = 1;\nnewMsg.projection['alarm'] = 1;\nnewMsg.projection['time'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 180,
        "wires": [
            [
                "a40e5157.4077d"
            ]
        ]
    },
    {
        "id": "d206e66b.d73eb8",
        "type": "switch",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "2b6693c7.697dbc"
            ],
            [
                "a73ef173.723ab"
            ]
        ]
    },
    {
        "id": "a73ef173.723ab",
        "type": "function",
        "z": "dc20c6e0.0feb98",
        "name": "put device",
        "func": "return {\n    topic:'putDevValue',\n    payload:{\n        topic           : 'putDevValue',\n        payload         : msg.payload[0],\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 180,
        "wires": [
            [
                "472ae883.652f08"
            ]
        ]
    },
    {
        "id": "7b9e1c55.c445c4",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysSelectValue = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numPlotDevices = 4;\n        var plotAxis = [];\n        var plotPts = [false, false, false, false];\n        var validDevice = [];\n        var numSys = sysName.length;\n        var getDevValueTimer = [];\n        var layout =\n        {\n          showlegend: true,\n          legend:\n          {\n            x: 0,\n            y: 1.35\n          },\n          xaxis:\n          {\n            title: '',\n          },\n          yaxis:\n          {\n            title: 'y1',\n          },\n          yaxis2:\n          {\n            title: 'y2',\n            overlaying: 'y',\n            side: 'right'\n          }\n        };\n        var traces = [{},{},{},{}];\n        var activeTraces = [];\n        var plotStarted = false;\n        var plotStartTime = 0;\n        var plotLength = 0;\n        \n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                sysSelect[idev] = [];\n                for (var isys = 0; isys < numSys; ++isys)\n                {\n                    sysSelect[idev][isys] = document.getElementById('sysSelect_' + idev.toString() + '_'+ isys.toString());\n                }\n                sysSelectValue[idev] = document.getElementById('sysSelectValue_' + idev.toString());\n                plotAxis[idev] = 'y1';\n                validDevice[idev] = false;\n                $('#unit_'+ idev.toString()).html('');\n            }\n            getDevValueTimer = setInterval(getDevValue,1000);\n        \n        });\n        var plotInterval = setInterval(function()\n        {\n          if (plotStarted)\n          {\n            var now = (new Date().getTime() - plotStartTime) / 1000;\n            var plotBeginning = now - plotLength;\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n              if (validDevice[idev])\n              {\n                var removeDone = false;\n                while(!removeDone)\n                {\n                  if (traces[idev].x[0] < plotBeginning)\n                  {\n                    traces[idev].x.shift();\n                    traces[idev].y.shift();\n                  }\n                  else\n                  {\n                    removeDone = true;\n                  }\n        \n                }\n              }\n            }\n            Plotly.newPlot('timePlot', activeTraces, layout);\n          }\n        }, 1000);\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevValue':\n                            putDevValue(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                for (var idev = 0; idev < numPlotDevices; ++idev)\n                {\n                    ws.send(JSON.stringify(\n                    {\n                        topic       : 'getDevSystem',\n                        system      : sysName[0],\n                        payload     : {},\n                        'userID'    : userID,\n                        plotDevice      : idev,\n                        sysSelectIndex  : 0,\n                    }));\n                }\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.plotDevice, systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.plotDevice][systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(plotDevice, sysSelectIndex)\n        {\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[plotDevice][isys].firstChild)\n                {\n                    sysSelect[plotDevice][isys].removeChild(sysSelect[plotDevice][isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[plotDevice][sysSelectIndex].appendChild(opt);\n            sysSelectValue[plotDevice].innerHTML = '';\n            $('#unit_'+ plotDevice.toString()).html('');\n            validDevice[plotDevice] = false;\n            var enableStartPlotButton = false;\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n              if (validDevice[idev]) enableStartPlotButton = true;\n            }\n            $(\"#startPlotButton\").prop('disabled', !enableStartPlotButton);\n        }\n        function sysSelected(plotDevice, sysSelectIndex)\n        {\n            if (sysSelect[plotDevice][sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[plotDevice][sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[plotDevice][sysSelectIndex].removeChild(sysSelect[plotDevice][sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        plotDevice      : plotDevice,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[plotDevice][isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice[plotDevice] = true;\n                $(\"#startPlotButton\").prop('disabled', false);\n            }\n        \n        }\n        function getDevName(plotDevice)\n        {\n            if (!validDevice[plotDevice]) return;\n            var devName = sysSelect[plotDevice][0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[plotDevice][isys].value;\n            }\n            return devName;\n        }\n        function getDevValue()\n        {\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           : 'getDevValue',\n                            payload         : {},\n                            userID          : userID,\n                            plotDevice      : idev,\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function putDevValue(deviceData)\n        {\n            if (deviceData.payload.type == 'scalar')\n            {\n                sysSelectValue[deviceData.plotDevice].innerHTML = deviceData.payload.value;\n                $('#unit_'+ deviceData.plotDevice.toString()).html(deviceData.payload.unit);\n                \n                var valueColor = 'black';\n                if (deviceData.payload.alarm > 0) valueColor = 'orange';\n                if (deviceData.payload.alarm > 2) valueColor = 'red';\n                $('#sysSelectValue_'+ deviceData.plotDevice.toString()).css(\"color\", valueColor);\n                \n                if (plotStarted)\n                {\n                  traces[deviceData.plotDevice].x.push((new Date().getTime() - plotStartTime) / 1000);\n                  traces[deviceData.plotDevice].y.push(deviceData.payload.value);\n                }\n            }\n        }\n        function selectAxis(plotDevice,axis)\n        {\n          plotAxis[plotDevice] = axis;\n        }\n        function selectPts(plotDevice,axis)\n        {\n          plotPts[plotDevice] = $(\"#pts_\" + plotDevice.toString()).is(':checked');\n        }\n        function startPlot()\n        {\n          if (!plotStarted)\n          {\n            $(\"#startPlotButton\").html('Stop Plot');\n        \n          }\n          else\n          {\n            $(\"#startPlotButton\").html('Start Plot');\n          }\n          plotStarted = !plotStarted;\n          if (!plotStarted)\n          {\n            activeTraces = [];\n            return;\n          }\n          for (var idev = 0; idev < numPlotDevices; ++idev)\n          {\n            var modeType = 'lines';\n            if (plotPts[idev]) modeType = 'markers';\n            traces[idev] = {\n              x: [],\n              y: [],\n              name: plotAxis[idev] + ' ' + getDevName(idev) + ' (' + $(\"#unit_\" + idev.toString()).text() + ')',\n              yaxis: plotAxis[idev],\n              type: 'scatter',\n              mode: modeType\n            }\n            if (validDevice[idev]) activeTraces.push(traces[idev]);\n          }\n          plotStartTime = new Date().getTime();\n          Plotly.newPlot('timePlot', activeTraces, layout);\n          plotLength = Number($(\"#plotLength\").val());\n        \n        }\n",
        "output": "str",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "662fe630.391fd8"
            ]
        ]
    },
    {
        "id": "a40e5157.4077d",
        "type": "mongodb in",
        "z": "dc20c6e0.0feb98",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "d206e66b.d73eb8"
            ]
        ]
    },
    {
        "id": "3492c51f.8da73a",
        "type": "http in",
        "z": "b94899c9.b16088",
        "name": "HTTP GET",
        "url": "/vectorDevicePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "a85d40a9.792c7"
            ]
        ]
    },
    {
        "id": "58100264.e2a28c",
        "type": "websocket in",
        "z": "b94899c9.b16088",
        "name": "Socket In",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "14e4bf1c.de7f91"
            ]
        ]
    },
    {
        "id": "c10d43eb.a111b",
        "type": "websocket out",
        "z": "b94899c9.b16088",
        "name": "Socket Out",
        "server": "3c933d8a.80b7a2",
        "client": "",
        "x": 1190,
        "y": 160,
        "wires": []
    },
    {
        "id": "14e4bf1c.de7f91",
        "type": "json",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "a0987ceb.433d5"
            ]
        ]
    },
    {
        "id": "a0987ceb.433d5",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevVector",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "6d37766.5909888"
            ],
            [
                "fb1a222f.f2a86"
            ]
        ]
    },
    {
        "id": "6d37766.5909888",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 140,
        "wires": [
            [
                "da622cfb.5d039"
            ]
        ]
    },
    {
        "id": "c58e58c7.c47278",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'vector')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "c10d43eb.a111b"
            ]
        ]
    },
    {
        "id": "84826490.39d2f8",
        "type": "switch",
        "z": "b94899c9.b16088",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevVector",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 160,
        "wires": [
            [
                "c58e58c7.c47278"
            ],
            [
                "ff3f821b.b4db"
            ]
        ]
    },
    {
        "id": "f26d0166.cfce1",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_0\" onchange=\"sysSelected(0,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_1\" onchange=\"sysSelected(0,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_2\" onchange=\"sysSelected(0,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_3\" onchange=\"sysSelected(0,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_4\" onchange=\"sysSelected(0,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_5\" onchange=\"sysSelected(0,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_6\" onchange=\"sysSelected(0,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div class='vert-pad' width=\"100%\">\n        <div class='row'>\n            <div class='col-md-12'>\n                <div class='card'>\n                    <p class='card-title'>Spectrogram</p>\n                    <div class='card-body' align=\"center\">\n                        <div width=\"100%\" id=\"spectrogram\" align=\"center\"></div> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"freezeButton\" type=\"button\" onclick=\"freezeRun()\"></button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"birdsEyeView()\">Birds Eye</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"sliceView()\">Slice View</button>\n            </div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"sliceViewButton\" type=\"button\" onclick=\"topView()\">Top View</button>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Start Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\"  style=\"font-size: medium;\" id=\"startTime\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-6\"  align=\"right\">\n                <span class=\"tableHeading\" style=\"font-size: medium;\">Stop Time</span>\n            </div>\n            <div class=\"col-md-6\">\n                <span class=\"tableHeading\" id=\"stopTime\" style=\"font-size: medium;\"></span>\n            </div>\n        </div>\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"right\" >\n                <span class=\"tableHeading\" style=\"font-size: medium;\">PlotSlices</span>\n            </div>\n            <div class=\"col-md-6\">\n                <input class=\"form-control center-justify\" id=\"plotslices\" type=\"text\" value=\"0\" style=\"font-size: medium;\"/>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "7dc39ef0.5d2be"
            ]
        ]
    },
    {
        "id": "fb1a222f.f2a86",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "Find device",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection['value'] = 1;\nnewMsg.projection['time'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 180,
        "wires": [
            [
                "da622cfb.5d039"
            ]
        ]
    },
    {
        "id": "ff3f821b.b4db",
        "type": "function",
        "z": "b94899c9.b16088",
        "name": "put device",
        "func": "return {\n    topic:'putDevVector',\n    payload:{\n        topic           : 'putDevVector',\n        payload         : msg.payload[0],\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "c10d43eb.a111b"
            ]
        ]
    },
    {
        "id": "a85d40a9.792c7",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numPlotDevices = 1;\n        var validDevice = [];\n        var numSys = sysName.length;\n        var numDeviceRequested = 0;\n        var numDeviceReceived = 0;\n        var graph3d = null;\n        var itimeSlice = 0;\n        var timeMax = 32;\n        var dataArray = [];\n        var timeStamp = [];\n        var deltaT = 0;\n        var freeze = false;\n        var sliceViewActive = false;\n        var birdsEyeViewActive = false;\n        var topViewActive = false;\n        var birdsEyeTimeMax = 32;\n        var plotStarted = false;\n        \n        var threedPlotOptions =\n        {\n            width: '850px',\n            height: '600px',\n            style: 'surface',\n            showPerspective: false,\n            showGrid: true,\n            showShadow: false,\n            keepAspectRatio: false,\n            verticalRatio: 0.6,\n            showZAxis: true,\n            xLabel: 'x',\n            yLabel: 'Time',\n            tooltip: true,\n            axisColor: '#ffffff',\n        };\n        \n        $( document ).ready(function()\n        {\n            $(\"#freezeButton\").text('Running');\n            $(\"#plotslices\").val(timeMax.toString());\n            $(\"#plotslices\").change(function()\n            {\n              timeMax = Number($(\"#plotslices\").val());\n              if (timeMax < 2)\n              {\n                  alert('Number of plot slices must be greater than 1');\n                  timeMax = 2;\n              }\n              birdsEyeTimeMax = timeMax;\n              $(\"#plotslices\").val(timeMax.toString());\n              dataArray = [];\n              itimeSlice = 0;\n              plotStarted = false;\n            });\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        \n            userID  = getRandomInt(4096);\n            wsConnectC();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                sysSelect[idev] = [];\n                for (var isys = 0; isys < numSys; ++isys)\n                {\n                    sysSelect[idev][isys] = document.getElementById('sysSelect_' + idev.toString() + '_'+ isys.toString());\n                }\n                validDevice[idev] = false;\n                setInterval(getDevVector,1000);\n            }\n        \n        });\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevVector':\n                            putDevVector(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                for (var idev = 0; idev < numPlotDevices; ++idev)\n                {\n                    ws.send(JSON.stringify(\n                    {\n                        topic       : 'getDevSystem',\n                        system      : sysName[0],\n                        payload     : {},\n                        'userID'    : userID,\n                        plotDevice      : idev,\n                        sysSelectIndex  : 0,\n                    }));\n                }\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.plotDevice, systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.plotDevice][systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(plotDevice, sysSelectIndex)\n        {\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[plotDevice][isys].firstChild)\n                {\n                    sysSelect[plotDevice][isys].removeChild(sysSelect[plotDevice][isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[plotDevice][sysSelectIndex].appendChild(opt);\n            validDevice[plotDevice] = false;\n            plotStarted = false;\n            sliceViewActive = true;\n            birdsEyeViewActive = false;\n            topViewActive = false;\n        }\n        function sysSelected(plotDevice, sysSelectIndex)\n        {\n            if (sysSelect[plotDevice][sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[plotDevice][sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[plotDevice][sysSelectIndex].removeChild(sysSelect[plotDevice][sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        plotDevice      : plotDevice,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[plotDevice][isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice[plotDevice] = true;\n            }\n        \n        }\n        function getDevName(plotDevice)\n        {\n            if (!validDevice[plotDevice]) return;\n            var devName = sysSelect[plotDevice][0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[plotDevice][isys].value;\n            }\n            return devName;\n        }\n        function getDevVector()\n        {\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           : 'getDevVector',\n                            payload         : {},\n                            userID          : userID,\n                            plotDevice      : idev,\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function putDevVector(deviceData)\n        {\n          var npts = deviceData.payload.value[0].length;\n          if(!plotStarted)\n          {\n            dataArray = [];\n            for (var ix = 0; ix < npts; ++ix)\n            {\n              dataArray[ix] =\n              {\n                'x': deviceData.payload.value[0][ix],\n                'y': 0,\n                'z': deviceData.payload.value[1][ix],\n                'style': deviceData.payload.value[1][ix]\n              };\n            }\n            var container = document.getElementById('spectrogram');\n        \n            graph3d = new vis.Graph3d(container, dataArray, threedPlotOptions);\n            $(\"#startTime\").text(new Date().toLocaleString());\n            $(\"#stopTime\").text(new Date().toLocaleString());\n            graph3d.on('cameraPositionChange', onCameraPositionChange);\n            if (sliceViewActive) sliceView();\n            if (birdsEyeViewActive) birdsEyeView();\n            if (topViewActive) topView();\n            plotStarted = true;\n          }\n          else\n          {\n            if (freeze) return;\n            if (itimeSlice < timeMax)\n            {\n              timeStamp[itimeSlice] = new Date().getTime();\n              deltaT = (timeStamp[itimeSlice] - timeStamp[0]) / 1000;\n              for (var ix = 0; ix < npts; ++ix)\n              {\n                dataArray[itimeSlice * npts + ix] =\n                {\n                  'x': deviceData.payload.value[0][ix],\n                  'y': deltaT,\n                  'z': deviceData.payload.value[1][ix],\n                  'style': deviceData.payload.value[1][ix]\n                };\n              }\n              ++itimeSlice;\n            }\n            else\n            {\n              for (var itime = 0; itime < (timeMax - 1); ++itime)\n              {\n                timeStamp[itime] = timeStamp[itime + 1];\n                deltaT = (timeStamp[itime] - timeStamp[0]) / 1000;\n                for (var ix = 0; ix < npts; ++ix)\n                {\n                  dataArray[itime * npts + ix] =\n                  {\n                    'x': dataArray[(itime + 1) * npts + ix].x,\n                    'y': deltaT,\n                    'z': dataArray[(itime + 1) * npts + ix].z,\n                    'style': dataArray[(itime + 1) * npts + ix].style\n                  };\n                }\n              }\n              timeStamp[timeMax - 1] = new Date().getTime();\n              deltaT = (timeStamp[timeMax - 1] - timeStamp[0]) / 1000;\n              for (var ix = 0; ix < npts; ++ix)\n              {\n                dataArray[(timeMax - 1) * npts + ix] =\n                {\n                  'x': deviceData.payload.value[0][ix],\n                  'y': deltaT,\n                  'z': deviceData.payload.value[1][ix],\n                  'style': deviceData.payload.value[1][ix]\n                };\n              }\n            }\n            $(\"#startTime\").text(new Date(timeStamp[0]).toLocaleString());\n            $(\"#stopTime\").text(new Date(timeStamp[itimeSlice - 1]).toLocaleString());\n            graph3d.setData(dataArray);\n          }\n        }\n        function freezeRun()\n        {\n          freeze = !freeze;\n          if (freeze)\n          {\n            $(\"#freezeButton\").text('Frozen');\n          }\n          else\n          {\n            $(\"#freezeButton\").text('Running');\n          }\n        \n        }\n        \n        function birdsEyeView()\n        {\n          var horzAngle = 315.0 * 3.1415927 / 180.0;\n          var vertAngle = 45.0 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n          if (sliceViewActive)\n          {\n            timeMax =  birdsEyeTimeMax;\n            $(\"#plotslices\").val(timeMax.toString());\n          }\n            sliceViewActive = false;\n            birdsEyeViewActive = true;\n            topViewActive = false;\n        \n        }\n        function sliceView()\n        {\n          var horzAngle = 0.0 * 3.1415927 / 180.0;\n          var vertAngle = 0.0 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 1.1});\n          timeMax = 2;\n          $(\"#plotslices\").val(timeMax.toString());\n          itimeSlice = 0;\n          plotStarted = false;\n          sliceViewActive = true;\n          birdsEyeViewActive = false;\n          topViewActive = false;\n        \n        }\n        function topView()\n        {\n          var horzAngle = 0 * 3.1415927 / 180.0;\n          var vertAngle = 90 * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n          if (sliceViewActive)\n          {\n            timeMax =  birdsEyeTimeMax;\n            $(\"#plotslices\").val(timeMax.toString());\n          }\n            sliceViewActive = false;\n            birdsEyeViewActive = false;\n            topViewActive = true;\n        \n        }\n        function onCameraPositionChange(event)\n        {\n          if (sliceViewActive) sliceView();\n          if (birdsEyeViewActive) birdsEyeView();\n          if (topViewActive) topView();\n        }",
        "output": "str",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "a6f6d5c1.bc8a98"
            ]
        ]
    },
    {
        "id": "da622cfb.5d039",
        "type": "mongodb in",
        "z": "b94899c9.b16088",
        "mongodb": "a77ab212.bfa86",
        "name": "Find Device",
        "collection": "devices",
        "operation": "find",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "84826490.39d2f8"
            ]
        ]
    },
    {
        "id": "2917a64d.e2448a",
        "type": "http in",
        "z": "3e89bdec.f16662",
        "name": "HTTP GET",
        "url": "/vectorDeviceArchivePlotter",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "b3a9579c.706448"
            ]
        ]
    },
    {
        "id": "f5f040ae.1bb0a",
        "type": "websocket in",
        "z": "3e89bdec.f16662",
        "name": "Socket In",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "56e68874.65ac18"
            ]
        ]
    },
    {
        "id": "9ac8b634.574398",
        "type": "websocket out",
        "z": "3e89bdec.f16662",
        "name": "Socket Out",
        "server": "869ccabd.6400e8",
        "client": "",
        "x": 1350,
        "y": 340,
        "wires": []
    },
    {
        "id": "56e68874.65ac18",
        "type": "json",
        "z": "3e89bdec.f16662",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "8c919681.f30be8"
            ]
        ]
    },
    {
        "id": "8c919681.f30be8",
        "type": "switch",
        "z": "3e89bdec.f16662",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevArchive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "7a670864.81a738"
            ],
            [
                "6698db8f.9c9df4"
            ]
        ]
    },
    {
        "id": "c708bc3b.3896e",
        "type": "mongodb in",
        "z": "3e89bdec.f16662",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 810,
        "y": 180,
        "wires": [
            [
                "e412cf54.92aba"
            ]
        ]
    },
    {
        "id": "7a670864.81a738",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "c708bc3b.3896e"
            ]
        ]
    },
    {
        "id": "344ebf13.0e5d",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'vector')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 300,
        "wires": [
            [
                "9ac8b634.574398"
            ]
        ]
    },
    {
        "id": "e412cf54.92aba",
        "type": "switch",
        "z": "3e89bdec.f16662",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevArchive",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "344ebf13.0e5d"
            ],
            [
                "9a704f74.2c43b"
            ]
        ]
    },
    {
        "id": "450bdf2b.6a831",
        "type": "mongodb in",
        "z": "3e89bdec.f16662",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in archiver",
        "collection": "archiver",
        "operation": "find",
        "x": 980,
        "y": 360,
        "wires": [
            [
                "2c6509a1.ef6106"
            ]
        ]
    },
    {
        "id": "6698db8f.9c9df4",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "Get device_id for Archive",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    startTime       : msg.payload.startTime,\n    stopTime        : msg.payload.stopTime,\n    projection      : {}\n};\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 1;\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 200,
        "wires": [
            [
                "c708bc3b.3896e"
            ]
        ]
    },
    {
        "id": "9a704f74.2c43b",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "find in archiver",
        "func": "var newMsg = \n{\n    topic           : msg.topic,\n    userID          : msg.userID,\n    plotDevice      : msg.plotDevice,\n    payload         : \n    {\n        time    :   {'$gt': msg.startTime, '$lt': msg.stopTime},\n        device_id   :   msg.payload[0]._id\n    },\n    startTime       : msg.startTime,\n    stopTime        : msg.stopTime,\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 360,
        "wires": [
            [
                "450bdf2b.6a831"
            ]
        ]
    },
    {
        "id": "2c6509a1.ef6106",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "putDevArchive",
        "func": "function sortByKey(array, key) \n{\n    return array.sort(\n        function(a, b) \n        {\n            var x = a[key]; var y = b[key];\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        });\n}\nsortByKey(msg.payload, 'time');\nvar data = [];\nvar npts = msg.payload.length;\nvar step = 1;\nfor (var ii = 0; ii < npts; ++ii)\n{\n    var ipt = Math.round(ii * step);\n    data[ii] = \n    {\n        value   : msg.payload[ipt].value, \n        time    : msg.payload[ipt].time\n    }\n}\nreturn {\n    topic:'putDevArchive',\n    payload:{\n        topic           : 'putDevArchive',\n        payload         : data,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 360,
        "wires": [
            [
                "9ac8b634.574398"
            ]
        ]
    },
    {
        "id": "2842313d.86179e",
        "type": "function",
        "z": "3e89bdec.f16662",
        "name": "Test Find device",
        "func": "var newMsg = \n{\n    topic           : 'test',\n    userID          : 1234,\n    plotDevice      : 1,\n    payload         : \n    {\n        sys01   : \"R3\",\n        sys02   : \"rfroom\",\n        sys03   : \"02\",\n        sys04   : \"diag\",\n        device  : \"oo\",\n        attr    : \"phaseShift\",\n        prop    : \"reading\",\n    },\n/*\n    projection      : \n    {\n        value           :   1,\n        time            :   1,\n        type            :   1,\n        archive_period  :   1,\n        status          :   1,\n        _id             :   0\n    }\n*/\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 460,
        "wires": [
            [
                "2292124e.47bf7e"
            ]
        ]
    },
    {
        "id": "2292124e.47bf7e",
        "type": "mongodb in",
        "z": "3e89bdec.f16662",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 630,
        "y": 460,
        "wires": [
            [
                "1b94a423.6d6fbc"
            ]
        ]
    },
    {
        "id": "1b94a423.6d6fbc",
        "type": "debug",
        "z": "3e89bdec.f16662",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "3932ee01.2f56e2",
        "type": "inject",
        "z": "3e89bdec.f16662",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 460,
        "wires": [
            [
                "2842313d.86179e"
            ]
        ]
    },
    {
        "id": "e1911f86.8cf8d",
        "type": "template",
        "z": "3e89bdec.f16662",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"2%\" align=\"center\"><span class=\"tableHeading\">Tr</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"12%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <a id='csv0', href='' target='_blank' download=\"data0.csv\" class=\"csv-linked\">1</a>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_0\" onchange=\"sysSelected(0,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_1\" onchange=\"sysSelected(0,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_2\" onchange=\"sysSelected(0,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_3\" onchange=\"sysSelected(0,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_4\" onchange=\"sysSelected(0,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_5\" onchange=\"sysSelected(0,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_6\" onchange=\"sysSelected(0,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div id='plotSetup'>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotSetupTable'>\n                    <tr>\n                        <td width=10% align=\"center\" class=\"tableHeading\">Max Plot Pts</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Start</td>\n                        <td width=20% align=\"center\" class=\"tableHeading\">Stop</td>\n                        <td width=10% align=\"center\"></td>\n                    </tr>\n                    <tr>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"maxPtsToPlot\" type=\"text\" value=\"200\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"startDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <input class=\"form-control\" id=\"stopDate\" type=\"text\"/>\n                        </td>\n                        <td align=\"center\">\n                            <button width=100% class=\"btn jumbotron-button\" id=\"getDataButton\" type=\"button\" onclick=\"getArchiveData()\">Get Data</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='col-md-12'>\n                <table id='plotTable'>\n                    <tr valign=\"top\">\n                        <td width='5%'>\n                            <table id='plotViewButtons'>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"birdsEyeButton\" type=\"button\" onclick=\"changePlotView(315,45)\">Birds Eye</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"overviewButton\" type=\"button\" onclick=\"changePlotView(0,90)\" >Overview</button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <button class=\"btn jumbotron-button btn-block\" id=\"xviewButton\"    type=\"button\" onclick=\"changePlotView(0,0)\"  >X View</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </td>\n                        <td width='95%' >\n                            <div id=\"timePlot\" width=\"100%\" class=\"plot\"></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 510,
        "y": 40,
        "wires": [
            [
                "39d6956e.a7d05a"
            ]
        ]
    },
    {
        "id": "dfec6039.5147d",
        "type": "mongodb out",
        "z": "3e89bdec.f16662",
        "mongodb": "a77ab212.bfa86",
        "name": "Remove",
        "collection": "devices",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 600,
        "y": 560,
        "wires": []
    },
    {
        "id": "5b1b7eda.7d9b5",
        "type": "debug",
        "z": "3e89bdec.f16662",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "b3a9579c.706448",
        "type": "template",
        "z": "3e89bdec.f16662",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numPlotDevices = 1;\n        var validDevice = [];\n        var numSys = sysName.length;\n        var numDeviceRequested = 0;\n        var numDeviceReceived = 0;\n        var csvFile = [null];\n        var traceData = [];\n        var graph3d = null;\n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                sysSelect[idev] = [];\n                for (var isys = 0; isys < numSys; ++isys)\n                {\n                    sysSelect[idev][isys] = document.getElementById('sysSelect_' + idev.toString() + '_'+ isys.toString());\n                }\n                validDevice[idev] = false;\n            }\n            var now = new Date();\n            console.log(now.toLocaleString('en-SE'));\n            var then = new Date(now.getTime() - 3600 * 24 * 1000);\n            $( \"#startDate\" ).val(then.toLocaleString());\n            $( \"#stopDate\" ).val(now.toLocaleString());\n            $( function()\n            {\n                $('#startDate').datetimepicker();\n            } );\n            $( function()\n            {\n                $('#stopDate').datetimepicker();\n            } );\n            $('#plotViewButtons').hide();\n        \n        });\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevArchive':\n                            putDevArchive(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                for (var idev = 0; idev < numPlotDevices; ++idev)\n                {\n                    ws.send(JSON.stringify(\n                    {\n                        topic       : 'getDevSystem',\n                        system      : sysName[0],\n                        payload     : {},\n                        'userID'    : userID,\n                        plotDevice      : idev,\n                        sysSelectIndex  : 0,\n                    }));\n                }\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.plotDevice, systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.plotDevice][systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(plotDevice, sysSelectIndex)\n        {\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[plotDevice][isys].firstChild)\n                {\n                    sysSelect[plotDevice][isys].removeChild(sysSelect[plotDevice][isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[plotDevice][sysSelectIndex].appendChild(opt);\n            $('#csv'+ plotDevice.toString()).removeAttr(\"href\");\n            $('#csv'+ plotDevice.toString()).css('color', 'white');\n            $('#csv'+ plotDevice.toString()).css('text-decoration', 'none');\n            $('#csv'+ plotDevice.toString()).css('font-weight', 'bold');\n            validDevice[plotDevice] = false;\n        }\n        function sysSelected(plotDevice, sysSelectIndex)\n        {\n            if (sysSelect[plotDevice][sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[plotDevice][sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[plotDevice][sysSelectIndex].removeChild(sysSelect[plotDevice][sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        plotDevice      : plotDevice,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[plotDevice][isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice[plotDevice] = true;\n            }\n        \n        }\n        function getDevName(plotDevice)\n        {\n            if (!validDevice[plotDevice]) return;\n            var devName = sysSelect[plotDevice][0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[plotDevice][isys].value;\n            }\n            return devName;\n        }\n        function putDevArchive(deviceData)\n        {\n            if (deviceData.payload.length < 1)\n            {\n              alert('No Data found');\n              $('#plotSetupTable').show();\n              return;\n            }\n            $('#plotSetupTable').show();\n            $('#plotViewButtons').show();\n            $('#timePlot').show();\n            makeCsvFile(deviceData);\n            var data = [];\n            var maxPtsToPlot = Number($( '#maxPtsToPlot').val());\n            var npts = deviceData.payload.length;\n            var step = 1;\n            if (deviceData.payload.length > maxPtsToPlot)\n            {\n                npts = maxPtsToPlot;\n                step = deviceData.payload.length / maxPtsToPlot;\n            }\n            var oodataArray = [];\n            var nxMax = deviceData.payload[0].value[0].length;\n            for (var ii = 0; ii < npts; ++ii)\n            {\n              var ipt = Math.round(ii * step);\n              var yvalue = Math.round((deviceData.payload[ipt].time - deviceData.payload[0].time)/3600) / 1000;\n              for (var ix = 0; ix < nxMax; ++ix)\n              {\n                var zvalue = deviceData.payload[ipt].value[1][ix];\n                oodataArray[ii * nxMax + ix] =\n                {\n                  'x': deviceData.payload[ipt].value[0][ix],\n                  'y': yvalue,\n                  'z': zvalue,\n                  'style': zvalue\n                };\n              }\n            }\n            var options = {\n              width:  '100%',\n              height: '800px',\n              style: 'surface',\n              showPerspective: false,\n              showGrid: true,\n              showShadow: false,\n              keepAspectRatio: false,\n              verticalRatio: 1.0,\n              showZAxis: true,\n              yCenter: '50%',\n              xLabel: 'x',\n              yLabel: 'Time (hr)',\n              zLabel: 'y',\n              tooltip: true,\n              axisColor: '#ffffff'\n            };\n        \n            // create a graph3d\n            var container = document.getElementById('timePlot');\n        \n            graph3d = new vis.Graph3d(container, oodataArray, options);\n            var horzAngle = 0 * 3.1415927 / 180.0;\n            var vertAngle = 90 * 3.1415927 / 180.0;\n            graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        \n            ++numDeviceReceived;\n        }\n        makeCsvFile = function (deviceData)\n        {\n            var dataString = '';\n        \n            dataString = dataString + 'Device,' + getDevName(deviceData.plotDevice) + '\\n';\n            dataString = dataString + 'StartDate,' + new Date(deviceData.payload[0].time).toISOString() + '\\n';\n            dataString = dataString + 'StartDate (mS),' + deviceData.payload[0].time.toString() + '\\n';\n            dataString = dataString + 'Time (sec),' + sysSelect[deviceData.plotDevice][4].value + '-' + sysSelect[deviceData.plotDevice][5].value + '\\n 0,x';\n            for (var ipt = 0; ipt < deviceData.payload[0].value[0].length; ++ipt) dataString = dataString + ',' + deviceData.payload[0].value[0][ipt];\n            dataString = dataString + '\\n';\n            for (var ii = 0; ii < deviceData.payload.length; ++ii)\n            {\n                dataString = dataString + ((deviceData.payload[ii].time - deviceData.payload[0].time)/1000).toString() + ',y';\n                for (var ipt = 0; ipt < deviceData.payload[ii].value[1].length; ++ipt) dataString = dataString + ',' + deviceData.payload[ii].value[1][ipt];\n                dataString = dataString + '\\n';\n            }\n            var data = new Blob([dataString], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (csvFile[deviceData.plotDevice] !== null) {\n              window.URL.revokeObjectURL(csvFile[deviceData.plotDevice]);\n            }\n        \n            csvFile[deviceData.plotDevice] = window.URL.createObjectURL(data);\n            // returns a URL you can use as a href\n            $('#csv'+ deviceData.plotDevice.toString()).css('color', 'blue');\n            $('#csv'+ deviceData.plotDevice.toString()).css('text-decoration', 'underline');\n            $('#csv'+ deviceData.plotDevice.toString()).css('font-weight', 'bold');\n            $('#csv'+ deviceData.plotDevice.toString()).attr(\"href\", csvFile[deviceData.plotDevice]);\n            $('#csv'+ deviceData.plotDevice.toString()).attr(\"download\", getDevName(deviceData.plotDevice) + '.csv');\n        \n        }\n        function getArchiveData()\n        {\n            numDeviceRequested = 0;\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    ++numDeviceRequested;\n                }\n            };\n            if (numDeviceRequested < 1) return;\n        \n            numDeviceReceived = 0;\n            var startDate = new Date($( \"#startDate\" ).val());\n            var stopDate = new Date($( \"#stopDate\" ).val());\n            $('#plotSetupTable').hide();\n            $('#timePlot').hide();\n            $('#plotViewButtons').hide();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                $('#csv'+ idev.toString()).removeAttr(\"href\");\n                $('#csv'+ idev.toString()).css('color', 'white');\n                $('#csv'+ idev.toString()).css('text-decoration', 'none');\n                $('#csv'+ idev.toString()).css('font-weight', 'bold');\n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           :   'getDevArchive',\n                            payload         :   {},\n                            userID          :   userID,\n                            plotDevice      :   idev,\n                            startTime       :   startDate.getTime(),\n                            stopTime        :   stopDate.getTime(),\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function changePlotView(horzAngleDeg, vertAngleDeg)\n        {\n          var horzAngle = horzAngleDeg * 3.1415927 / 180.0;\n          var vertAngle = vertAngleDeg * 3.1415927 / 180.0;\n          graph3d.setCameraPosition({'horizontal': horzAngle, 'vertical': vertAngle, 'distance': 2.0});\n        \n        }",
        "output": "str",
        "x": 250,
        "y": 40,
        "wires": [
            [
                "76eac7c1.f17b98"
            ]
        ]
    },
    {
        "id": "966b546c.254fd8",
        "type": "http in",
        "z": "f695378f.b711c8",
        "name": "HTTP GET",
        "url": "/deviceViewer",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "f76fe4f5.73b968"
            ]
        ]
    },
    {
        "id": "715e45b0.c8028c",
        "type": "websocket in",
        "z": "f695378f.b711c8",
        "name": "Socket In",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "231d203e.34e9a"
            ]
        ]
    },
    {
        "id": "4cef7827.f126c8",
        "type": "websocket out",
        "z": "f695378f.b711c8",
        "name": "Socket Out",
        "server": "3d5cd97c.77df96",
        "client": "",
        "x": 1290,
        "y": 160,
        "wires": []
    },
    {
        "id": "231d203e.34e9a",
        "type": "json",
        "z": "f695378f.b711c8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "c9cb794c.a861c8"
            ]
        ]
    },
    {
        "id": "c9cb794c.a861c8",
        "type": "switch",
        "z": "f695378f.b711c8",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "putSetting",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "a780ffdd.aafce"
            ],
            [
                "97cdaaf9.87f3e8"
            ],
            [
                "84a5074.bb97ff8"
            ]
        ]
    },
    {
        "id": "80e29cd4.e87f5",
        "type": "mongodb in",
        "z": "f695378f.b711c8",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 770,
        "y": 160,
        "wires": [
            [
                "9bc4b69f.db5508"
            ]
        ]
    },
    {
        "id": "a780ffdd.aafce",
        "type": "function",
        "z": "f695378f.b711c8",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "80e29cd4.e87f5"
            ]
        ]
    },
    {
        "id": "a8f0c51f.7c7a48",
        "type": "template",
        "z": "f695378f.b711c8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading\">value</span></td>\n                <td width=\"5%\" align=\"center\"><span class=\"tableHeading\">unit</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">setting</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">update</span></td>\n           </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_0\" onchange=\"sysSelected(0,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_1\" onchange=\"sysSelected(0,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_2\" onchange=\"sysSelected(0,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_3\" onchange=\"sysSelected(0,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_4\" onchange=\"sysSelected(0,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_5\" onchange=\"sysSelected(0,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0_6\" onchange=\"sysSelected(0,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_0\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_0\"></span></td>\n                <td align=\"center\">\n                    <input class=\"form-control\" id=\"setting_0\" type=\"text\" value=\"0\" />\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"updateButton_0\" type=\"button\" onclick=\"updateSetting(0)\">Update</button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_0\" onchange=\"sysSelected(1,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_1\" onchange=\"sysSelected(1,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_2\" onchange=\"sysSelected(1,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_3\" onchange=\"sysSelected(1,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_4\" onchange=\"sysSelected(1,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_5\" onchange=\"sysSelected(1,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1_6\" onchange=\"sysSelected(1,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_1\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_1\"></span></td>\n                <td align=\"center\">\n                    <input class=\"form-control\" id=\"setting_1\" type=\"text\" value=\"0\" />\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"updateButton_1\" type=\"button\" onclick=\"updateSetting(1)\">Update</button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_0\" onchange=\"sysSelected(2,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_1\" onchange=\"sysSelected(2,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_2\" onchange=\"sysSelected(2,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_3\" onchange=\"sysSelected(2,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_4\" onchange=\"sysSelected(2,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_5\" onchange=\"sysSelected(2,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2_6\" onchange=\"sysSelected(2,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_2\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_2\"></span></td>\n                <td align=\"center\">\n                    <input class=\"form-control\" id=\"setting_2\" type=\"text\" value=\"0\" />\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"updateButton_2\" type=\"button\" onclick=\"updateSetting(2)\">Update</button>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_0\" onchange=\"sysSelected(3,0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_1\" onchange=\"sysSelected(3,1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_2\" onchange=\"sysSelected(3,2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_3\" onchange=\"sysSelected(3,3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_4\" onchange=\"sysSelected(3,4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_5\" onchange=\"sysSelected(3,5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3_6\" onchange=\"sysSelected(3,6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td align=\"center\"><span class=\"tableText\" id=\"sysSelectValue_3\"></span></td>\n                <td align=\"center\"><span class=\"tableText\" id=\"unit_3\"></span></td>\n                <td align=\"center\">\n                    <input class=\"form-control\" id=\"setting_3\" type=\"text\" value=\"0\" />\n                </td>\n                <td align=\"center\">\n                    <button class=\"btn jumbotron-button btn-block\" id=\"updateButton_3\" type=\"button\" onclick=\"updateSetting(3)\">Update</button>\n                </td>\n          </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "b7999533.5cb828"
            ]
        ]
    },
    {
        "id": "43b2fa9a.41dc94",
        "type": "function",
        "z": "f695378f.b711c8",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'scalar')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "4cef7827.f126c8"
            ]
        ]
    },
    {
        "id": "97cdaaf9.87f3e8",
        "type": "function",
        "z": "f695378f.b711c8",
        "name": "Find device",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    plotDevice      : msg.payload.plotDevice,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection['value'] = 1;\nnewMsg.projection['alarm'] = 1;\nnewMsg.projection['unit'] = 1;\nnewMsg.projection['time'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['archive_period'] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 160,
        "wires": [
            [
                "80e29cd4.e87f5"
            ]
        ]
    },
    {
        "id": "9bc4b69f.db5508",
        "type": "switch",
        "z": "f695378f.b711c8",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevValue",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevInfo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 930,
        "y": 160,
        "wires": [
            [
                "43b2fa9a.41dc94"
            ],
            [
                "d09431b9.69c3c"
            ],
            []
        ]
    },
    {
        "id": "d09431b9.69c3c",
        "type": "function",
        "z": "f695378f.b711c8",
        "name": "put device",
        "func": "return {\n    topic:'putDevValue',\n    payload:{\n        topic           : 'putDevValue',\n        payload         : msg.payload[0],\n        userID          : msg.userID,\n        plotDevice      : msg.plotDevice\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 160,
        "wires": [
            [
                "4cef7827.f126c8"
            ]
        ]
    },
    {
        "id": "f76fe4f5.73b968",
        "type": "template",
        "z": "f695378f.b711c8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysSelectValue = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numPlotDevices = 4;\n        var validDevice = [];\n        var numSys = sysName.length;\n        var dataset = null;\n        var numDeviceRequested = 0;\n        var numDeviceReceived = 0;\n        var getDevValueTimer = [];\n        \n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                sysSelect[idev] = [];\n                for (var isys = 0; isys < numSys; ++isys)\n                {\n                    sysSelect[idev][isys] = document.getElementById('sysSelect_' + idev.toString() + '_'+ isys.toString());\n                }\n                sysSelectValue[idev] = document.getElementById('sysSelectValue_' + idev.toString());\n                validDevice[idev] = false;\n                $('#setting_'+ idev.toString()).hide();\n                $('#unit_'+ idev.toString()).html('');\n                $('#updateButton_'+ idev.toString()).hide();\n            }\n            getDevValueTimer = setInterval(getDevValue,1000);\n        });\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevValue':\n                            putDevValue(msg);\n                            break;\n                        case 'putDevInfo':\n                            putDevInfo(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                for (var idev = 0; idev < numPlotDevices; ++idev)\n                {\n                    ws.send(JSON.stringify(\n                    {\n                        topic       : 'getDevSystem',\n                        system      : sysName[0],\n                        payload     : {},\n                        'userID'    : userID,\n                        plotDevice      : idev,\n                        sysSelectIndex  : 0,\n                    }));\n                }\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.plotDevice, systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.plotDevice][systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(plotDevice, sysSelectIndex)\n        {\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[plotDevice][isys].firstChild)\n                {\n                    sysSelect[plotDevice][isys].removeChild(sysSelect[plotDevice][isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[plotDevice][sysSelectIndex].appendChild(opt);\n            sysSelectValue[plotDevice].innerHTML = '';\n        \n            $('#unit_'+ plotDevice.toString()).html('');\n            $('#setting_' + plotDevice.toString()).val('0');\n            $('#setting_'+ plotDevice.toString()).hide();\n            $('#updateButton_'+ plotDevice.toString()).hide();\n            validDevice[plotDevice] = false;\n        }\n        function sysSelected(plotDevice, sysSelectIndex)\n        {\n            if (sysSelect[plotDevice][sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[plotDevice][sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[plotDevice][sysSelectIndex].removeChild(sysSelect[plotDevice][sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        plotDevice      : plotDevice,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[plotDevice][isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice[plotDevice] = true;\n                if (sysSelect[plotDevice][6].value == 'setting')\n                {\n                    $('#setting_'+ plotDevice.toString()).show();\n                    $('#updateButton_'+ plotDevice.toString()).show();\n                };\n                $('#unit_'+ plotDevice.toString()).show();\n        \n            }\n        }\n        function getDevName(plotDevice)\n        {\n            if (!validDevice[plotDevice]) return;\n            var devName = sysSelect[plotDevice][0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[plotDevice][isys].value;\n            }\n            return devName;\n        }\n        function getDevValue()\n        {\n            for (var idev = 0; idev < numPlotDevices; ++idev)\n            {\n                if (validDevice[idev])\n                {\n                    var newMsg =\n                        {\n                            topic           : 'getDevValue',\n                            payload         : {},\n                            userID          : userID,\n                            plotDevice      : idev,\n                        };\n                    for (var isys = 0; isys < numSys; ++isys)\n                    {\n                        newMsg.payload[sysName[isys]] = sysSelect[idev][isys].value;\n                    }\n                    ws.send(JSON.stringify(newMsg));\n                }\n            }\n        }\n        function putDevValue(deviceData)\n        {\n            if (sysSelect[deviceData.plotDevice][6].value == 'setting')\n            {\n                if (deviceData.payload.type != 'scalar')\n                {\n                    $('#setting_'+ deviceData.plotDevice.toString()).hide();\n                    $('#updateButton_'+ deviceData.plotDevice.toString()).hide();\n                }\n            };\n            if (deviceData.payload.type == 'scalar')\n            {\n                sysSelectValue[deviceData.plotDevice].innerHTML = deviceData.payload.value;\n                $('#unit_'+ deviceData.plotDevice.toString()).html(deviceData.payload.unit);\n                \n                var valueColor = 'black';\n                if (deviceData.payload.alarm > 0) valueColor = 'orange';\n                if (deviceData.payload.alarm > 2) valueColor = 'red';\n                $('#sysSelectValue_'+ deviceData.plotDevice.toString()).css(\"color\", valueColor);\n            }\n        }\n        function updateSetting(plotDevice)\n        {\n            var setting = Number($('#setting_' + plotDevice.toString()).val());\n            var topicString = 'archiver';\n            for (var isys = 0; isys < numSys; ++isys)\n            {\n                topicString = topicString + '/' + sysSelect[plotDevice][isys].value;\n            }\n            ws.send(JSON.stringify(\n                {\n                    topic       : 'putSetting',\n                    payload     : \n                    {\n                        topic   : topicString,\n                        payload :\n                        {\n                            type    : 'scalar',\n                            value   : setting\n                        }\n                    }\n                }));\n            var buttonColor = $('#updateButton_' + plotDevice.toString()).css(\"background-color\");\n            $('#updateButton_' + plotDevice.toString()).css(\"background-color\",\"yellow\");\n            setTimeout(function(){ $('#updateButton_' + plotDevice.toString()).css(\"background-color\",buttonColor); }, 1000);\n        }\n",
        "output": "str",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "e11ffffd.45b02"
            ]
        ]
    },
    {
        "id": "5f5fabe8.9c0e04",
        "type": "mqtt in",
        "z": "e17f7487.2a78e8",
        "name": "",
        "topic": "archiver/#",
        "qos": "0",
        "broker": "84d80994.260508",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "6571c773.dbc138"
            ]
        ]
    },
    {
        "id": "a56beba4.f70678",
        "type": "json",
        "z": "e17f7487.2a78e8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 40,
        "wires": [
            [
                "88bd3e6.77514c"
            ]
        ]
    },
    {
        "id": "88bd3e6.77514c",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "parse topic",
        "func": "var topic = msg.topic.split('/');\nvar device = \n{\n   sys01:topic[1],\n   sys02:topic[2],\n   sys03:topic[3],\n   sys04:topic[4],\n   device:topic[5],\n   attr:topic[6],\n   prop:topic[7],\n};\nvar data = \n{\n   type:msg.payload.type,\n   value:msg.payload.value,\n   time:new Date().getTime()\n};\nreturn {topic:msg.topic, payload:device, 'device':device, 'data':data};",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 120,
        "wires": [
            [
                "6605ebc6.57ac64"
            ]
        ]
    },
    {
        "id": "641d6f94.95e4d",
        "type": "mongodb out",
        "z": "e17f7487.2a78e8",
        "mongodb": "a77ab212.bfa86",
        "name": "update device db",
        "collection": "devices",
        "payonly": false,
        "upsert": true,
        "multi": false,
        "operation": "update",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "6605ebc6.57ac64",
        "type": "mongodb in",
        "z": "e17f7487.2a78e8",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 310,
        "y": 120,
        "wires": [
            [
                "e020461d.044ee8"
            ]
        ]
    },
    {
        "id": "72c58cab.a3c494",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check alarms and Archive interval",
        "func": "//console.log(msg);\nvar newMsg = {topic:msg.topic, payload:{}, query:msg.device};\nif (msg.payload[0].type == 'scalar')\n{\n    msg.data.alarm = 0;\n    if ( !isNaN(msg.data.value) && (msg.payload[0].lolo < msg.payload[0].low) && (msg.payload[0].low  < msg.payload[0].high) && (msg.payload[0].high  < msg.payload[0].hihi) )\n    {\n       if (msg.data.value < msg.payload[0].low)  msg.data.alarm = 1;\n       if (msg.data.value < msg.payload[0].lolo) msg.data.alarm = 3;\n       if (msg.data.value > msg.payload[0].high) msg.data.alarm = 2;\n       if (msg.data.value > msg.payload[0].hihi) msg.data.alarm = 4;\n    }\n}\nvar archiveDeltat = msg.data.time - msg.payload[0].lastArchive;\nvar archiveMsg = null;\nif (archiveDeltat > msg.payload[0].archive_period)\n{\n    msg.data.lastArchive = msg.data.time;\n    archiveMsg = \n    {\n        topic:'archiveData',\n        payload:\n        {\n            device_id   :   msg.payload[0]._id, \n            type        :   msg.data.type,\n            value       :   msg.data.value,\n            time        :   msg.data.time\n        }\n    };\n}\nnewMsg.payload = {$set:msg.data};\nreturn [newMsg,archiveMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 800,
        "y": 120,
        "wires": [
            [
                "641d6f94.95e4d"
            ],
            [
                "d43c6952.688248"
            ]
        ]
    },
    {
        "id": "d43c6952.688248",
        "type": "mongodb out",
        "z": "e17f7487.2a78e8",
        "mongodb": "a77ab212.bfa86",
        "name": "insert new record in archiver",
        "collection": "archiver",
        "payonly": true,
        "upsert": true,
        "multi": false,
        "operation": "insert",
        "x": 1100,
        "y": 160,
        "wires": []
    },
    {
        "id": "4479a228.b2670c",
        "type": "inject",
        "z": "372efc91.0669c4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 80,
        "wires": [
            [
                "3b7fc8c1.5d0328"
            ]
        ]
    },
    {
        "id": "4d29919d.64728",
        "type": "mongodb in",
        "z": "372efc91.0669c4",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "47e08a64.25efa4"
            ]
        ]
    },
    {
        "id": "3b7fc8c1.5d0328",
        "type": "function",
        "z": "372efc91.0669c4",
        "name": "Get All devices",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 80,
        "wires": [
            [
                "4d29919d.64728"
            ]
        ]
    },
    {
        "id": "47e08a64.25efa4",
        "type": "debug",
        "z": "372efc91.0669c4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "b62f1769.a08ce8",
        "type": "http in",
        "z": "b046fa71.84ef78",
        "name": "HTTP GET",
        "url": "/core",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 40,
        "wires": [
            [
                "246bd634.8a26ea"
            ]
        ]
    },
    {
        "id": "246bd634.8a26ea",
        "type": "template",
        "z": "b046fa71.84ef78",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarDevicePlotter\" >Scalar Device Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/scalarDeviceArchivePlotter\" >Scalar Device Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorDevicePlotter\" >Vector Device Plotter</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/vectorDeviceArchivePlotter\" >Vector Device Archive Plotter</a>\n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/deviceViewer\" >Device Viewer</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/alarmScanner\" >Alarm Scanner</a> \n            </div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-6' align='center'>\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/deviceEditor\" >Device Editor</a> \n            </div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/\" >Demo Index</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 210,
        "y": 40,
        "wires": [
            [
                "2306cceb.9f4ba4"
            ]
        ]
    },
    {
        "id": "2306cceb.9f4ba4",
        "type": "template",
        "z": "b046fa71.84ef78",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky-Lite Core",
        "output": "str",
        "x": 330,
        "y": 40,
        "wires": [
            [
                "a27c2555.706ae8"
            ]
        ]
    },
    {
        "id": "b755b3b5.e3bcf",
        "type": "template",
        "z": "a7b9d689.b8a5e8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Archive Plotter",
        "output": "str",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "47ff9adb.808a04"
            ]
        ]
    },
    {
        "id": "662fe630.391fd8",
        "type": "template",
        "z": "dc20c6e0.0feb98",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Scalar Plotter",
        "output": "str",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "b6d95279.1b494"
            ]
        ]
    },
    {
        "id": "d3fb135c.608ae",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 810,
        "y": 40,
        "wires": [
            [
                "9b590bf2.843288"
            ]
        ]
    },
    {
        "id": "ed1aa8d2.55f018",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "d3fb135c.608ae"
            ]
        ]
    },
    {
        "id": "a3e3873a.606468",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "ed1aa8d2.55f018"
            ]
        ]
    },
    {
        "id": "a800f1ce.4bf1f",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div class=\"jumbotron\" width=\"100%\">\n        <div class=\"row\">\n            <div class=\"col-md-2\" style=\"text-align: left\">\n                <a href='/core' >\n                    <img src=\"/img/home.png\" height=\"75px\"/>\n                </a>\n            </div>\n            <div class=\"col-md-8\" style=\"text-align: center\">\n                <h1 class=\"display-5 jumbotron-title\">{{{payload.title}}}</h1>\n            </div>\n            <div class=\"col-md-2\" style=\"text-align: right\"><a href='https://www.blinky-lite.io/' target='_blank'><img src=\"/img/BlinkyLogo.gif\" height=\"50px\"/></a></div>\n        </div>\n    </div>",
        "output": "str",
        "x": 440,
        "y": 40,
        "wires": [
            [
                "a3e3873a.606468"
            ]
        ]
    },
    {
        "id": "9b590bf2.843288",
        "type": "http response",
        "z": "ca529822.9112f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 40,
        "wires": []
    },
    {
        "id": "a27c2555.706ae8",
        "type": "subflow:ca529822.9112f8",
        "z": "b046fa71.84ef78",
        "x": 470,
        "y": 40,
        "wires": []
    },
    {
        "id": "8a439be9.030ab8",
        "type": "subflow:ca529822.9112f8",
        "z": "dc20c6e0.0feb98",
        "name": "",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "4414ba.159a1b48",
        "type": "subflow:ca529822.9112f8",
        "z": "a7b9d689.b8a5e8",
        "name": "",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "7dc39ef0.5d2be",
        "type": "subflow:ca529822.9112f8",
        "z": "b94899c9.b16088",
        "name": "",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "a6f6d5c1.bc8a98",
        "type": "template",
        "z": "b94899c9.b16088",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Plotter",
        "output": "str",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "f26d0166.cfce1"
            ]
        ]
    },
    {
        "id": "55363cbd.c229e4",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color:var(--white);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: var(--color3);\n        }\n        .card-button\n        {\n          color: var(--color5);\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--color1);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: white;\n          background-color: var(--color3);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }\n        .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }",
        "output": "str",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "773bf8af.2ab458"
            ]
        ]
    },
    {
        "id": "76eac7c1.f17b98",
        "type": "template",
        "z": "3e89bdec.f16662",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Vector Archive Plotter",
        "output": "str",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "e1911f86.8cf8d"
            ]
        ]
    },
    {
        "id": "39d6956e.a7d05a",
        "type": "subflow:ca529822.9112f8",
        "z": "3e89bdec.f16662",
        "name": "",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "e11ffffd.45b02",
        "type": "template",
        "z": "f695378f.b711c8",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Device Viewer",
        "output": "str",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "a8f0c51f.7c7a48"
            ]
        ]
    },
    {
        "id": "b7999533.5cb828",
        "type": "subflow:ca529822.9112f8",
        "z": "f695378f.b711c8",
        "name": "",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "84a5074.bb97ff8",
        "type": "function",
        "z": "f695378f.b711c8",
        "name": "Setup setting",
        "func": "return {topic : msg.payload.payload.topic, payload : msg.payload.payload.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "f4b48559.1b6d48"
            ]
        ]
    },
    {
        "id": "f4b48559.1b6d48",
        "type": "mqtt out",
        "z": "f695378f.b711c8",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "e0324448.15a668",
        "type": "http in",
        "z": "66b972e4.6895bc",
        "name": "HTTP GET",
        "url": "/alarmScanner",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "37705369.618bfc"
            ]
        ]
    },
    {
        "id": "eca24fad.e3dbb",
        "type": "websocket in",
        "z": "66b972e4.6895bc",
        "name": "Socket In",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "7b78ea48.68f8f4"
            ]
        ]
    },
    {
        "id": "b428b171.bd512",
        "type": "websocket out",
        "z": "66b972e4.6895bc",
        "name": "Socket Out",
        "server": "2b65833e.87911c",
        "client": "",
        "x": 1230,
        "y": 160,
        "wires": []
    },
    {
        "id": "7b78ea48.68f8f4",
        "type": "json",
        "z": "66b972e4.6895bc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 250,
        "y": 160,
        "wires": [
            [
                "2c04c5c7.7dedba"
            ]
        ]
    },
    {
        "id": "2c04c5c7.7dedba",
        "type": "switch",
        "z": "66b972e4.6895bc",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "scanAlarms",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "f38fc33b.11b3c"
            ],
            [
                "135f661c.f705ea"
            ]
        ]
    },
    {
        "id": "4209902b.a91ea",
        "type": "mongodb in",
        "z": "66b972e4.6895bc",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 730,
        "y": 160,
        "wires": [
            [
                "fac6735e.2d6a7"
            ]
        ]
    },
    {
        "id": "f38fc33b.11b3c",
        "type": "function",
        "z": "66b972e4.6895bc",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "4209902b.a91ea"
            ]
        ]
    },
    {
        "id": "5bd77dd5.4714f4",
        "type": "template",
        "z": "66b972e4.6895bc",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n           </tr>\n            <tr>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_0\" onchange=\"sysSelected(0)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_1\" onchange=\"sysSelected(1)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_2\" onchange=\"sysSelected(2)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_3\" onchange=\"sysSelected(3)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_4\" onchange=\"sysSelected(4)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_5\" onchange=\"sysSelected(5)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n                <td>\n                    <select class=\"custom-select\" id=\"sysSelect_6\" onchange=\"sysSelected(6)\">\n                        <option value='notSelected'></option>\n                    </select>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <div width=\"100%\">\n        <div class=\"row\"> \n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n            <div class=\"col-md-6\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\">\n                <button class=\"btn jumbotron-button btn-block\" id=\"toggleSoundButton\" type=\"button\" onclick=\"toggleSound()\">Turn Sound On</button>\n            </div>\n            <div class=\"col-md-3\" align=\"center\" style=\"padding-top:10px;padding-bottom:10px;\"></div>\n        </div>\n    </div>\n    <div width=\"100%\">\n        <table width=\"100%\" id='alarmTable'>\n            <tr class=\"tableHeading\">\n                <td width='10%'>Alarm</td>\n                <td width='60%'>Device</td>\n                <td width='20%'>Value</td>\n                <td width='10%'>Unit</td>\n                <td width='10%'>Type</td>\n            </tr>\n        </table>\n    </div>",
        "output": "str",
        "x": 530,
        "y": 40,
        "wires": [
            [
                "96012651.6dc7c8"
            ]
        ]
    },
    {
        "id": "468d27de.650ce8",
        "type": "function",
        "z": "66b972e4.6895bc",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    if (msg.payload[idevice]['type'] == 'scalar')\n    {\n        var ideviceFound = false;\n        for (var isys = 0; isys < sysCounter; ++isys)\n        {\n            if (msg.payload[idevice][msg.system] == sysArray[isys])\n            {\n                ideviceFound = true;\n            }\n        }\n        if (!ideviceFound)\n        {\n           sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n            ++sysCounter;\n        }\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 140,
        "wires": [
            [
                "b428b171.bd512"
            ]
        ]
    },
    {
        "id": "135f661c.f705ea",
        "type": "function",
        "z": "66b972e4.6895bc",
        "name": "scanAlarms",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    payload         : msg.payload.payload,\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "4209902b.a91ea"
            ]
        ]
    },
    {
        "id": "fac6735e.2d6a7",
        "type": "switch",
        "z": "66b972e4.6895bc",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "scanAlarms",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "468d27de.650ce8"
            ],
            [
                "6df8a909.5598c8"
            ]
        ]
    },
    {
        "id": "6df8a909.5598c8",
        "type": "function",
        "z": "66b972e4.6895bc",
        "name": "alarmScan",
        "func": "return {\n    topic:'alarmScan',\n    payload:{\n        topic           : 'alarmScan',\n        payload         : msg.payload,\n        userID          : msg.userID,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "b428b171.bd512"
            ]
        ]
    },
    {
        "id": "37705369.618bfc",
        "type": "template",
        "z": "66b972e4.6895bc",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numSys = sysName.length;\n        var lastSystemSelected = -1;\n        var audioAlarm = new Audio('/audio/alarm.ogg');\n        var alarmSoundOn = false;\n        var soundLastPlayed = 0;\n        var soundInterval = 4000;\n        \n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            sysSelect = [];\n            for (var isys = 0; isys < numSys; ++isys)\n            {\n                sysSelect[isys] = document.getElementById('sysSelect_'+ isys.toString());\n            }\n            createAlarmTableRows(100);\n            setInterval(scanAlarms,1000);\n            \n        });\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'alarmScan':\n                            alarmScan(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                ws.send(JSON.stringify(\n                {\n                    topic       : 'getDevSystem',\n                    system      : sysName[0],\n                    payload     : {},\n                    'userID'    : userID,\n                    sysSelectIndex  : 0,\n                }));\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(sysSelectIndex)\n        {\n            lastSystemSelected = sysSelectIndex;\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[isys].firstChild)\n                {\n                    sysSelect[isys].removeChild(sysSelect[isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[sysSelectIndex].appendChild(opt);\n        \n        }\n        function sysSelected(sysSelectIndex)\n        {\n            if (sysSelect[sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[sysSelectIndex].removeChild(sysSelect[sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n        \n            }\n        }\n        function scanAlarms()\n        {\n            if (lastSystemSelected < 0) return;\n            var newMsg =\n                {\n                    topic           : 'scanAlarms',\n                    payload         : {},\n                    userID          : userID,\n                };\n            for (var isys = 0; isys < lastSystemSelected; ++isys)\n            {\n                newMsg.payload[sysName[isys]] = sysSelect[isys].value;\n            }\n            newMsg.payload['alarm'] = {'$gt': 0};\n            ws.send(JSON.stringify(newMsg));\n        \n            \n        }\n        function createAlarmTableRows(nrows)\n        {\n            var alarmTable = document.getElementById('alarmTable');\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                var row = alarmTable.insertRow(irow + 1);\n                row.setAttribute(\"id\", \"alarmTable\" + irow.toString());\n                row.setAttribute(\"class\", \"tableText\");\n                var iconCell = row.insertCell(0);\n                var devCell  = row.insertCell(1);\n                var valCell  = row.insertCell(2);\n                var unitCell = row.insertCell(3);\n                var typeCell = row.insertCell(4);\n                iconCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_icon\");\n                devCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_dev\");\n                valCell.setAttribute( \"id\", \"alarmTable\" + irow.toString() + \"_val\");\n                unitCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_unit\");\n                typeCell.setAttribute(\"id\", \"alarmTable\" + irow.toString() + \"_type\");\n                $('#alarmTable' + irow.toString()).hide();\n                iconCell.innerHTML = \"<img id='alarmTable\" + irow.toString() + \"_led'\" + \" src='/img/greenLight.png' height='50px'/>\";\n            }\n        \n        }\n        function alarmScan(deviceData)\n        {\n            var deviceInfo = [];\n            var nrows = $('#alarmTable tr').length;\n            nrows = nrows - 1;\n            if (deviceData.payload.length > nrows) alert('Too many alarms to display!');\n            for (var idev = 0; idev < deviceData.payload.length; ++idev)\n            {\n                deviceInfo[idev] = deviceData.payload[idev].sys01;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].sys02;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].sys03;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].sys04;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].device;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].attr;\n                deviceInfo[idev] = deviceInfo[idev] + '-' + deviceData.payload[idev].prop;\n                $('#alarmTable' + idev.toString()).show();\n                $('#alarmTable' + idev.toString() + '_dev').html(deviceInfo[idev]);\n                $('#alarmTable' + idev.toString() + '_val').html(deviceData.payload[idev].value.toString());\n                $('#alarmTable' + idev.toString() + '_unit').html(deviceData.payload[idev].unit);\n                var type = '';\n                if (deviceData.payload[idev].alarm == 1) type = 'LOW';\n                if (deviceData.payload[idev].alarm == 2) type = 'HIGH';\n                if (deviceData.payload[idev].alarm == 3) type = 'LOLO';\n                if (deviceData.payload[idev].alarm == 4) type = 'HIHI';\n                $('#alarmTable' + idev.toString() + '_type').html(type);\n                if (deviceData.payload[idev].alarm < 3)\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/yellowLight.png');\n                }\n                else\n                {\n                    $('#alarmTable' + idev.toString() + '_led').attr('src','/img/redLight.png');\n                    if (alarmSoundOn)\n                    {\n                        if ((new Date().getTime() - soundLastPlayed) > soundInterval)\n                        {\n                            audioAlarm.play();\n                            soundLastPlayed = new Date().getTime();\n                        }\n                    }\n                    \n                }\n        \n            }\n            for (var idev = deviceData.payload.length; idev < nrows; ++idev)\n            {\n                $('#alarmTable' + idev.toString()).hide();\n            }\n        \n        }\n        function toggleSound()\n        {\n            alarmSoundOn = !alarmSoundOn;\n            var soundButtonText = 'Turn Sound On';\n            if (alarmSoundOn) soundButtonText = 'Turn Sound Off';\n            $('#toggleSoundButton').html(soundButtonText);\n        }",
        "output": "str",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "89f0ce22.0a21d"
            ]
        ]
    },
    {
        "id": "89f0ce22.0a21d",
        "type": "template",
        "z": "66b972e4.6895bc",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Alarm Scanner",
        "output": "str",
        "x": 410,
        "y": 40,
        "wires": [
            [
                "5bd77dd5.4714f4"
            ]
        ]
    },
    {
        "id": "96012651.6dc7c8",
        "type": "subflow:ca529822.9112f8",
        "z": "66b972e4.6895bc",
        "name": "",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "28a7aaf1.68c4a6",
        "type": "http in",
        "z": "ae804a7e.55fe08",
        "name": "HTTP GET",
        "url": "/deviceEditor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "cb80f0ed.13e8e"
            ]
        ]
    },
    {
        "id": "de901f83.18333",
        "type": "websocket in",
        "z": "ae804a7e.55fe08",
        "name": "Socket In",
        "server": "3c9dcaab.a3f3c6",
        "client": "",
        "x": 100,
        "y": 180,
        "wires": [
            [
                "84ff5e2.2d674a"
            ]
        ]
    },
    {
        "id": "26454da1.bec2a2",
        "type": "websocket out",
        "z": "ae804a7e.55fe08",
        "name": "Socket Out",
        "server": "3c9dcaab.a3f3c6",
        "client": "",
        "x": 1310,
        "y": 180,
        "wires": []
    },
    {
        "id": "84ff5e2.2d674a",
        "type": "json",
        "z": "ae804a7e.55fe08",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "2ebe9802.39afe8"
            ]
        ]
    },
    {
        "id": "2ebe9802.39afe8",
        "type": "switch",
        "z": "ae804a7e.55fe08",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevInfo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDatabaseDump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "checkIfDeviceExists",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "createDevice",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deleteDevice",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "updateDatabaseWithDevInfo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "9221d093.9b5fd"
            ],
            [
                "17d5684a.49ab08"
            ],
            [
                "17d5684a.49ab08"
            ],
            [
                "17d5684a.49ab08"
            ],
            [
                "e85a9104.88fd6"
            ],
            [
                "9cfebd1a.b53db"
            ],
            [
                "50c4cf70.7bf7e"
            ]
        ]
    },
    {
        "id": "f509e5a7.fc2c78",
        "type": "mongodb in",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 710,
        "y": 160,
        "wires": [
            [
                "98e72caa.96d1c"
            ]
        ]
    },
    {
        "id": "9221d093.9b5fd",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Find system",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    system          : msg.payload.system,\n    userID          : msg.payload.userID,\n    sysSelectIndex  : msg.payload.sysSelectIndex,\n    payload         : msg.payload.payload,\n    projection      : {}\n};\nnewMsg.projection[msg.payload.system] = 1;\nnewMsg.projection['status'] = 1;\nnewMsg.projection['type'] = 1;\nnewMsg.projection['_id'] = 0;\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "f509e5a7.fc2c78"
            ]
        ]
    },
    {
        "id": "55204664.bb6178",
        "type": "template",
        "z": "ae804a7e.55fe08",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "    <div style='padding-bottom:20px;'>\n        <div class='card 'width=\"100%\">\n            <p class='card-title'>Edit Device</p>\n            <div class='card-body'>\n                <table width=\"100%\" >\n                    <tr>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n                        <td width=\"5%\" align=\"center\"><span class=\"tableHeading\">edit</span></td>\n                   </tr>\n                    <tr>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_0\" onchange=\"sysSelected(0)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_1\" onchange=\"sysSelected(1)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_2\" onchange=\"sysSelected(2)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_3\" onchange=\"sysSelected(3)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_4\" onchange=\"sysSelected(4)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_5\" onchange=\"sysSelected(5)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"sysSelect_6\" onchange=\"sysSelected(6)\">\n                                <option value='notSelected'></option>\n                            </select>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button btn-block\" id=\"editDeviceButton\" type=\"button\" onclick=\"editDevice()\">Edit</button>\n                        </td>\n                    </tr>\n                </table>\n                <div width='100%' id='mqttTopicData' align=\"left\">\n                    <div class='row'>\n                        <div class='col-md-2'>\n                            <span class=\"tableHeading\">MQTT Topic</span>\n                        </div>\n                        <div class='col-md-10'>\n                            <span class=\"tableText\" id='mqttTopic'>topic</span>\n                        </div>\n                    </div>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                            <span class=\"tableHeading\">MQTT Payload Structure</span>\n                        </div>\n                        <div class='col-md-10'>\n                            <span class=\"tableText\" id='mqttPayloadStruct'>strcuture</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom:20px;'>\n        <div class='card 'width=\"100%\">\n            <p class='card-title'>New Device</p>\n            <div class='card-body'>\n                <table width=\"100%\" >\n                    <tr>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys01</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys02</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys03</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">sys04</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">device</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">attr</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">prop</span></td>\n                        <td width=\"10%\" align=\"center\"><span class=\"tableHeading\">type</span></td>\n                        <td width=\"5%\" align=\"center\"><span class=\"tableHeading\">Create</span></td>\n                   </tr>\n                    <tr>\n                        <td>\n                            <input class=\"form-control\" id=\"sys01InputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <input class=\"form-control\" id=\"sys02InputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <input class=\"form-control\" id=\"sys03InputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <input class=\"form-control\" id=\"sys04InputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <input class=\"form-control\" id=\"deviceInputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <input class=\"form-control\" id=\"attrInputField\" type=\"text\" value=\"\"/>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"propInputSelect\" >\n                                <option value=''></option>\n                                <option value='reading'>reading</option>\n                                <option value='setting'>setting</option>\n                            </select>\n                        </td>\n                        <td>\n                            <select class=\"custom-select\" id=\"typeInputSelect\" >\n                                <option value=''></option>\n                                <option value='scalar'>scalar</option>\n                                <option value='vector'>vector</option>\n                            </select>\n                        </td>\n                        <td align=\"center\">\n                            <button class=\"btn jumbotron-button btn-block\" id=\"createDeviceButton\" type=\"button\" onclick=\"createDevice()\">Create</button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div style='padding-bottom:20px;'>\n        <div class='card' width=\"100%\">\n            <p class='card-title'>Database Dump</p>\n            <div class='card-body'>\n                <div class='row'>\n                    <div class='col-md-2'>\n                        <button class=\"btn jumbotron-button btn-block\" type=\"button\" onclick=\"getDatabaseDump()\">Get Database Dump</button>\n                    </div>\n                    <div class='col-md-2' style='padding-top: 10px;'>\n                        <a id='databaseDumpLink', href='' target='_blank' download=\"databaseDump.csv\" class=\"csv-linked\">Database Dump</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id=\"editDeviceDialog\" title=\"Edit Device\" class='card'>\n        <p class='card-title'>Database Dump</p>\n            <div class='card-body'>\n                <table>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LoLo</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"loloAlarm\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">LOW</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"lowAlarm\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HIGH</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"highAlarm\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">HiHi</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"hihiAlarm\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Unit</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"deviceUnit\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                    <tr>\n                        <td width=\"50%\" align=\"left\">  <span class=\"tableHeading\">Archive Period (mS)</span></td>\n                        <td width=\"50%\" align=\"right\"><input class=\"form-control\" id=\"archPeriod\" type=\"text\" value=\"0\" /></td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "a9dd59d7.3cbfa8"
            ]
        ]
    },
    {
        "id": "586fe53f.83b0cc",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "parse system list",
        "func": "var sysArray = [];\nvar sysCounter = 0;\nfor (var idevice = 0; idevice < msg.payload.length; ++idevice)\n{\n    var ideviceFound = false;\n    for (var isys = 0; isys < sysCounter; ++isys)\n    {\n        if (msg.payload[idevice][msg.system] == sysArray[isys])\n        {\n            ideviceFound = true;\n        }\n    }\n    if (!ideviceFound)\n    {\n       sysArray[sysCounter] =  msg.payload[idevice][msg.system];\n        ++sysCounter;\n    }\n}\nreturn {\n    topic:'loadSystem',\n    payload:{\n        system          : msg.system,\n        topic           : 'loadSystem',\n        payload         : sysArray,\n        userID          : msg.userID,\n        sysSelectIndex  : msg.sysSelectIndex,\n\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "98e72caa.96d1c",
        "type": "switch",
        "z": "ae804a7e.55fe08",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getDevSystem",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDevInfo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getDatabaseDump",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "checkIfDeviceExists",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 180,
        "wires": [
            [
                "586fe53f.83b0cc"
            ],
            [
                "cb561c47.0c3af"
            ],
            [
                "3956b13e.19947e"
            ],
            [
                "c605245d.0137a8"
            ]
        ]
    },
    {
        "id": "cb80f0ed.13e8e",
        "type": "template",
        "z": "ae804a7e.55fe08",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var retries = 0;\n        var userID = -1;\n        var sysSelect = [];\n        var sysName = ['sys01','sys02','sys03','sys04','device','attr','prop'];\n        var numSys = sysName.length;\n        var lastSystemSelected = -1;\n        var deviceData = null;\n        var validDevice = false;\n        var databaseDumpCsvFile = null;\n        var newDevRecord = {};\n        \n        $( document ).ready(function()\n        {\n            userID  = getRandomInt(4096);\n            wsConnectC();\n            sysSelect = [];\n            for (var isys = 0; isys < numSys; ++isys)\n            {\n                sysSelect[isys] = document.getElementById('sysSelect_'+ isys.toString());\n            }\n            $('#mqttTopicData').hide();\n            $('#editDeviceButton').hide();\n            $('#databaseDumpLink').hide();\n        });\n        $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Update\",\n                            click: function() {updateDatabaseWithDevInfo(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Delete Device\",\n                            click: function() {$( this ).dialog( \"close\" ); deleteDeviceCheck(); },\n                            showText: false\n                        }\n                                \n                    ]\n                });\n        } );\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                if (msg.userID == userID)\n                {\n                    switch(msg.topic)\n                    {\n                        case 'loadSystem':\n                            loadSystem(msg);\n                            break;\n                        case 'putDevInfo':\n                            putDevInfo(msg);\n                            break;\n                        case 'putDatabaseDump':\n                            putDatabaseDump(msg);\n                            break;\n                        case 'deviceExistCheck':\n                            deviceExistCheck(msg);\n                            break;\n                        case 'deviceCreated':\n                            deviceCreated(msg);\n                            break;\n                        case 'deviceDeleted' :\n                            deviceDeleted(msg);\n                            break;\n                        case 'deviceUpdated' :\n                            deviceUpdated(msg);\n                            break;\n                        default:\n                        // code block\n                    }\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                ws.send(JSON.stringify(\n                {\n                    topic       : 'getDevSystem',\n                    system      : sysName[0],\n                    payload     : {},\n                    'userID'    : userID,\n                    sysSelectIndex  : 0,\n                }));\n            };\n            ws.onclose = function()\n            {\n            };\n        }\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        function loadSystem(systemData)\n        {\n            clearDownStreamColumns(systemData.sysSelectIndex);\n            for (var ii = 0; ii < systemData.payload.length; ++ii)\n            {\n                opt = document.createElement('option');\n                opt.value = systemData.payload[ii];\n                opt.innerHTML = systemData.payload[ii];\n                sysSelect[systemData.sysSelectIndex].appendChild(opt);\n            }\n        }\n        function clearDownStreamColumns(sysSelectIndex)\n        {\n            lastSystemSelected = sysSelectIndex;\n            for (var isys = sysSelectIndex; isys < numSys; ++isys)\n            {\n                while (sysSelect[isys].firstChild)\n                {\n                    sysSelect[isys].removeChild(sysSelect[isys].firstChild);\n                }\n            }\n            var opt = document.createElement('option');\n            opt.value = 'notSelected';\n            opt.innerHTML = '';\n            sysSelect[sysSelectIndex].appendChild(opt);\n            validDevice = false;\n            $('#editDeviceButton').hide();\n            $('#mqttTopicData').hide();\n            $( \"#editDeviceDialog\" ).dialog('close');\n        }\n        function sysSelected(sysSelectIndex)\n        {\n            if (sysSelect[sysSelectIndex].value == 'notSelected') return;\n            if(sysSelect[sysSelectIndex].firstChild.value == 'notSelected')\n            {\n                sysSelect[sysSelectIndex].removeChild(sysSelect[sysSelectIndex].firstChild);\n            }\n            if (sysSelectIndex < (numSys - 1))\n            {\n                var newMsg =\n                    {\n                        topic           : 'getDevSystem',\n                        system          : sysName[sysSelectIndex + 1],\n                        payload         : {},\n                        userID          : userID,\n                        sysSelectIndex  : sysSelectIndex + 1\n                    };\n                for (var isys = 0; isys <= sysSelectIndex; ++isys)\n                {\n                    newMsg.payload[sysName[isys]] = sysSelect[isys].value;\n                }\n                ws.send(JSON.stringify(newMsg));\n            }\n            else\n            {\n                validDevice = true;\n                $('#editDeviceButton').show();\n                getDevInfo();\n            }\n        }\n        function getDevName()\n        {\n            if (!validDevice) return;\n            var devName = sysSelect[0].value;\n            for (var isys = 1; isys < numSys; ++isys)\n            {\n                devName = devName + '-' + sysSelect[isys].value;\n            }\n            return devName;\n        }\n        function getDevInfo()\n        {\n            if (!validDevice) return;\n            var newMsg =\n                {\n                    topic             : 'getDevInfo',\n                    payload           : {},\n                    userID            : userID,\n                };\n            for (var isys = 0; isys < numSys; ++isys)\n            {\n                newMsg.payload[sysName[isys]] = sysSelect[isys].value;\n            }\n            ws.send(JSON.stringify(newMsg));\n            \n        }\n        function putDevInfo(msg)\n        {\n            deviceData = msg;\n            $( \"#loloAlarm\" ).val(deviceData.payload.lolo);\n            $( \"#hihiAlarm\" ).val(deviceData.payload.hihi);\n            $( \"#lowAlarm\" ).val(deviceData.payload.low);\n            $( \"#highAlarm\" ).val(deviceData.payload.high);\n            $( \"#deviceUnit\" ).val(deviceData.payload.unit);\n            $( \"#archPeriod\" ).val(deviceData.payload.archive_period);\n            var devTopic = 'archiver';\n            for (var isys = 0; isys < numSys; ++isys)\n            {\n                devTopic = devTopic + '/' + sysSelect[isys].value;\n            }\n            var mqttScalar = {type:'scalar', value:0};\n            var mqttVector = {type:'vector', value:[[1,2,3], [0.0, -1.0, 2.0]]};\n            $('#mqttTopic').html(devTopic);\n            if (deviceData.payload.type == 'scalar') $('#mqttPayloadStruct').html(JSON.stringify(mqttScalar));\n            if (deviceData.payload.type == 'vector') $('#mqttPayloadStruct').html(JSON.stringify(mqttVector));\n            $('#mqttTopicData').show();\n        }\n        function editDevice()\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit \" + getDevName() );    \n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function updateDatabaseWithDevInfo()\n        {\n            var newMsg = \n            {\n                topic           : 'updateDatabaseWithDevInfo',\n                userID          : deviceData.userID,\n                query           : { _id     : deviceData.payload._id },\n                payload     :\n                {\n                    '$set'  :\n                    { \n                        'unit'              :   $( \"#deviceUnit\" ).val(),\n                        'lolo'              :   Number($( \"#loloAlarm\" ).val()),\n                        'hihi'              :   Number($( \"#hihiAlarm\" ).val()),\n                        'low'               :   Number($( \"#lowAlarm\" ).val()),\n                        'high'              :   Number($( \"#highAlarm\" ).val()),\n                        'archive_period'    :   Number($( \"#archPeriod\" ).val())\n                    }\n                }\n            };\n            ws.send(JSON.stringify(newMsg));\n        }\n        function deviceUpdated(msg)\n        {\n            $('#databaseDumpLink').hide();\n            acknowledgeDialog('Acknowledge', 'Info', 'Device updated');\n        }\n        function getDatabaseDump()\n        {\n            var newMsg =\n                {\n                    topic             : 'getDatabaseDump',\n                    payload           : {},\n                    userID            : userID,\n                };\n            ws.send(JSON.stringify(newMsg));\n            \n        }\n        function putDatabaseDump(msg)\n        {\n            var databaseDump = '_id,sys01,sys02,sys03,sys04,device,attr,prop,type,archive_period,lolo,low,high,hihi,alarm,value,unit,time, ,lastArchive\\n';\n            for (var irec = 0; irec < msg.payload.length; ++irec)\n            {\n                var value = 'vector';\n                if (msg.payload[irec].type == 'scalar') value = msg.payload[irec].value;\n                databaseDump = databaseDump \n                    + msg.payload[irec]._id + ',' \n                    + msg.payload[irec].sys01 + ',' \n                    + msg.payload[irec].sys02 + ',' \n                    + msg.payload[irec].sys03 + ',' \n                    + msg.payload[irec].sys04 + ',' \n                    + msg.payload[irec].device + ',' \n                    + msg.payload[irec].attr + ',' \n                    + msg.payload[irec].prop + ',' \n                    + msg.payload[irec].type + ',' \n                    + msg.payload[irec].archive_period + ',' \n                    + msg.payload[irec].lolo + ',' \n                    + msg.payload[irec].low + ',' \n                    + msg.payload[irec].high + ',' \n                    + msg.payload[irec].hihi + ',' \n                    + msg.payload[irec].alarm + ',' \n                    + value + ',' \n                    + msg.payload[irec].unit + ','\n                    + new Date(msg.payload[irec].time).toLocaleString() + ','\n                    + new Date(msg.payload[irec].lastArchive).toLocaleString()\n                    + '\\n'; \n            }\n            var dataBlob = new Blob([databaseDump], {type: 'text/plain'});\n        \n            // If we are replacing a previously generated file we need to\n            // manually revoke the object URL to avoid memory leaks.\n            if (databaseDumpCsvFile !== null) {\n              window.URL.revokeObjectURL(databaseDumpCsvFile);\n            }\n        \n            databaseDumpCsvFile = window.URL.createObjectURL(dataBlob);\n            $('#databaseDumpLink').attr(\"href\", databaseDumpCsvFile);\n            $('#databaseDumpLink').attr(\"download\", 'databaseDump.csv');\n            $('#databaseDumpLink').show();\n        }\n        function createDevice()\n        {\n            newDevRecord = {};\n            newDevRecord = {\n               sys01 :  $('#sys01InputField').val().replace(/\\s/g,''),\n               sys02 :  $('#sys02InputField').val().replace(/\\s/g,''),\n               sys03 :  $('#sys03InputField').val().replace(/\\s/g,''),\n               sys04 :  $('#sys04InputField').val().replace(/\\s/g,''),\n               device :  $('#deviceInputField').val().replace(/\\s/g,''),\n               attr :  $('#attrInputField').val().replace(/\\s/g,''),\n               prop :  $('#propInputSelect').val().replace(/\\s/g,''),\n               type :  $('#typeInputSelect').val().replace(/\\s/g,''),\n               archive_period: 60000,\n               lolo: 1,\n               low:1,\n               high:-1,\n               hihi:-1,\n               alarm:0,\n               unit:'unit',\n               time: new Date().getTime(),\n               lastArchive: 0\n            }\n            var validDeviceRecord = true;\n            if (newDevRecord.sys01.length < 1) validDeviceRecord = false;\n            if (newDevRecord.sys02.length < 1) validDeviceRecord = false;\n            if (newDevRecord.sys03.length < 1) validDeviceRecord = false;\n            if (newDevRecord.sys04.length < 1) validDeviceRecord = false;\n            if (newDevRecord.device.length < 1) validDeviceRecord = false;\n            if (newDevRecord.attr.length < 1) validDeviceRecord = false;\n            if (newDevRecord.prop.length < 1) validDeviceRecord = false;\n            if (newDevRecord.type.length < 1) validDeviceRecord = false;\n            if (!validDeviceRecord)\n            {\n                acknowledgeDialog('Acknowledge', 'Warning!', 'Cannot have an empty field.');\n                return;\n            }\n            var valy = 0;\n            if (newDevRecord.type == 'vector') valy = [[],[]];\n            newDevRecord.value = valy;\n            var newMsg =\n            {\n                topic             : 'checkIfDeviceExists',\n                payload           : \n                {\n                    sys01 :  newDevRecord.sys01,\n                    sys02 :  newDevRecord.sys02,\n                    sys03 :  newDevRecord.sys03,\n                    sys04 :  newDevRecord.sys04,\n                    device : newDevRecord.device,\n                    attr :   newDevRecord.attr,\n                    prop :   newDevRecord.prop,\n                },\n                userID            : userID,\n            };\n            ws.send(JSON.stringify(newMsg));\n        }\n        function deviceExistCheck(msg)\n        {\n            if (msg.payload.length > 0) \n            {\n                acknowledgeDialog('Acknowledge', 'Warning!', 'Device already exists');\n                return;\n            }\n            var newMsg =\n            {\n                topic             : 'createDevice',\n                userID            : userID,\n                payload           : {}\n            };\n            newMsg.payload = newDevRecord;\n            ws.send(JSON.stringify(newMsg));\n        }\n        function deviceCreated(msg)\n        {\n            clearDownStreamColumns(0);\n            ws.send(JSON.stringify(\n            {\n                topic       : 'getDevSystem',\n                system      : sysName[0],\n                payload     : {},\n                'userID'    : userID,\n                sysSelectIndex  : 0,\n            }));\n            var devName = '';\n            $('#databaseDumpLink').hide();\n        \n            acknowledgeDialog('Acknowledge', 'Info', 'Device created');\n        }\n        function deleteDeviceCheck()\n        {\n            var optionButtons = [\n                'Delete Device',\n                'Cancel'];\n            var optionfunctions = [\n                function(){$( \"#optionDialog\" ).dialog( \"close\" ); deleteDevice();}, \n                function(){$( \"#optionDialog\" ).dialog( \"close\" );}];\n            optionDialog('Warning', 'Delete Device', 'Warning! This cannot be undone!', optionButtons, optionfunctions);\n            \n        }\n        function deleteDevice()\n        {\n            var newMsg = \n            {\n                topic           : 'deleteDevice',\n                userID          : userID,\n                payload         : \n                {\n                    sys01 :  deviceData.payload.sys01,\n                    sys02 :  deviceData.payload.sys02,\n                    sys03 :  deviceData.payload.sys03,\n                    sys04 :  deviceData.payload.sys04,\n                    device : deviceData.payload.device,\n                    attr :   deviceData.payload.attr,\n                    prop :   deviceData.payload.prop\n                } \n                \n            };\n            ws.send(JSON.stringify(newMsg));\n            \n        }\n        function deviceDeleted(msg)\n        {\n            clearDownStreamColumns(0);\n            ws.send(JSON.stringify(\n            {\n                topic       : 'getDevSystem',\n                system      : sysName[0],\n                payload     : {},\n                'userID'    : userID,\n                sysSelectIndex  : 0,\n            }));\n            var devName = '';\n            $('#databaseDumpLink').hide();\n            acknowledgeDialog('Acknowledge', 'Info', 'Device deleted');\n        }",
        "output": "str",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "892ec6cf.c3bf38"
            ]
        ]
    },
    {
        "id": "892ec6cf.c3bf38",
        "type": "template",
        "z": "ae804a7e.55fe08",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Device Editor",
        "output": "str",
        "x": 390,
        "y": 60,
        "wires": [
            [
                "55204664.bb6178"
            ]
        ]
    },
    {
        "id": "a9dd59d7.3cbfa8",
        "type": "subflow:ca529822.9112f8",
        "z": "ae804a7e.55fe08",
        "name": "",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "17d5684a.49ab08",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Find device data",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    payload         : msg.payload.payload,\n//    projection      : {}\n};\n/*\nnewMsg.projection['type'] = 1;\nnewMsg.projection['archive_period'] = 1;\nnewMsg.projection['_id'] = 1;\nnewMsg.projection['lolo'] = 1;\nnewMsg.projection['hihi'] = 1;\nnewMsg.projection['low'] = 1;\nnewMsg.projection['high'] = 1;\nnewMsg.projection['unit'] = 1;\n*/\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 180,
        "wires": [
            [
                "f509e5a7.fc2c78"
            ]
        ]
    },
    {
        "id": "cb561c47.0c3af",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "put device info",
        "func": "return {\n    topic:'putDevInfo',\n    payload:{\n        topic           : 'putDevInfo',\n        payload         : msg.payload[0],\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "50c4cf70.7bf7e",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "update device",
        "func": "var newMsg = \n{\n    topic           : msg.payload.topic,\n    userID          : msg.payload.userID,\n    query           : msg.payload.query,\n    payload         : msg.payload.payload\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 420,
        "wires": [
            [
                "aa3c9ecf.3edc6",
                "ad1e39d.01622c8"
            ]
        ]
    },
    {
        "id": "7fa1f5fb.c8633c",
        "type": "inject",
        "z": "ae804a7e.55fe08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 340,
        "y": 460,
        "wires": [
            [
                "b2e9813b.666e8"
            ]
        ]
    },
    {
        "id": "b2e9813b.666e8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Test Update device",
        "func": "var newMsg = \n{\n    topic           : 'test',\n    userID          : 1234,\n    plotDevice      : 1,\n    query         : \n    {\n//        sys01   : \"linac\",\n//        sys02   : \"gallery\",\n//        sys03   : \"11\",\n//        sys04   : \"diag\",\n//        device  : \"geiger\",\n//        attr    : \"cpm\",\n//        prop    : \"reading\",\n        _id     : \"5c3f67ae6bcb8d82a86e8666\"\n    },\n    payload     :\n    {\n        '$set'  :\n        { \n            'unit' : 'mA'\n        }\n    }\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "aa3c9ecf.3edc6"
            ]
        ]
    },
    {
        "id": "aa3c9ecf.3edc6",
        "type": "mongodb out",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "",
        "collection": "devices",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "8cfe343c.a5c188",
        "type": "inject",
        "z": "ae804a7e.55fe08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 660,
        "wires": [
            [
                "8a513733.db1b18"
            ]
        ]
    },
    {
        "id": "8a513733.db1b18",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Find device data",
        "func": "var newMsg = \n{\n    topic           : 'findDevice',\n    payload         : \n    {\n        sys01    : 's1',\n        sys02    : 's2',\n        sys03    : 's3',\n        sys04    : 's4',\n        device   : 'dev',\n        attr     : 'attr7',\n        prop     : 'reading',\n    },\n\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 660,
        "wires": [
            [
                "747e8635.f230a8"
            ]
        ]
    },
    {
        "id": "747e8635.f230a8",
        "type": "mongodb in",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "713df77e.c12e78",
                "92b6df6f.52e96"
            ]
        ]
    },
    {
        "id": "713df77e.c12e78",
        "type": "debug",
        "z": "ae804a7e.55fe08",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1050,
        "y": 660,
        "wires": []
    },
    {
        "id": "3956b13e.19947e",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "put databaseDump",
        "func": "return {\n    topic:'putDatabaseDump',\n    payload:{\n        topic           : 'putDatabaseDump',\n        payload         : msg.payload,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "c605245d.0137a8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Check if Device Exists Already",
        "func": "return {\n    topic:'deviceExistCheck',\n    payload:{\n        topic           : 'deviceExistCheck',\n        payload         : msg.payload,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "9bf15072.d89f8",
        "type": "mongodb out",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Create new device",
        "collection": "devices",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "e85a9104.88fd6",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Create Device",
        "func": "return {topic:'deviceCreated', payload:msg.payload.payload, userID: msg.payload.userID};",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "9bf15072.d89f8",
                "9e09b10.729c85"
            ]
        ]
    },
    {
        "id": "9e09b10.729c85",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Device Created",
        "func": "return {\n    topic: msg.topic,\n    payload:{\n        topic           : msg.topic,\n        payload         : msg.payload,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "9cfebd1a.b53db",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Delete Device",
        "func": "return {topic:'deleteDevice', payload:msg.payload.payload, userID: msg.payload.userID, device:msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 360,
        "wires": [
            [
                "f8572b1c.b4b128"
            ]
        ]
    },
    {
        "id": "92b6df6f.52e96",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "find in archiver",
        "func": "var newMsg = \n{\n    topic           :   'archiverSearch',\n    payload         : \n    {\n        device_id   :   msg.payload[0]._id\n    },\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660,
        "y": 700,
        "wires": [
            [
                "d10dcd9b.da382"
            ]
        ]
    },
    {
        "id": "d10dcd9b.da382",
        "type": "mongodb in",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in archiver",
        "collection": "archiver",
        "operation": "find",
        "x": 840,
        "y": 700,
        "wires": [
            [
                "713df77e.c12e78"
            ]
        ]
    },
    {
        "id": "dff82bd8.364b88",
        "type": "mqtt out",
        "z": "ae804a7e.55fe08",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 510,
        "y": 580,
        "wires": []
    },
    {
        "id": "56a2f475.9db1ac",
        "type": "inject",
        "z": "ae804a7e.55fe08",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 120,
        "y": 600,
        "wires": [
            [
                "bb2b4af3.5511c8"
            ]
        ]
    },
    {
        "id": "bb2b4af3.5511c8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Put fake setting",
        "func": "return {topic: 'archiver/s1/s2/s3/s4/test/attr/reading', payload: {\"type\":\"scalar\",\"value\": Math.random() }};",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 600,
        "wires": [
            [
                "713df77e.c12e78",
                "dff82bd8.364b88"
            ]
        ]
    },
    {
        "id": "f8572b1c.b4b128",
        "type": "mongodb in",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 730,
        "y": 360,
        "wires": [
            [
                "261f8e74.6d6572",
                "fe4c66e6.fcd4e8"
            ]
        ]
    },
    {
        "id": "261f8e74.6d6572",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Prepare to delete archiver record",
        "func": "var newMsg = \n{\n    topic           :   msg.topic,\n    userID          :   msg.userID,\n    device          :   msg.device,\n    payload         : \n    {\n        device_id   :   msg.payload[0]._id\n    },\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 420,
        "wires": [
            [
                "6a32f72d.c90918"
            ]
        ]
    },
    {
        "id": "6a32f72d.c90918",
        "type": "mongodb out",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Delete Archive device",
        "collection": "archiver",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1260,
        "y": 420,
        "wires": []
    },
    {
        "id": "fe4c66e6.fcd4e8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Prepare to delete devices record",
        "func": "var newMsg = \n{\n    topic           :   'deviceDeleted',\n    userID          :   msg.userID,\n    device          :   msg.device,\n    payload         :   msg.device\n};\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 360,
        "wires": [
            [
                "32a777de.f8f358",
                "f2a594b4.2a0ab8"
            ]
        ]
    },
    {
        "id": "32a777de.f8f358",
        "type": "mongodb out",
        "z": "ae804a7e.55fe08",
        "mongodb": "a77ab212.bfa86",
        "name": "Delete  device",
        "collection": "devices",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1240,
        "y": 360,
        "wires": []
    },
    {
        "id": "f2a594b4.2a0ab8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Device Deleted",
        "func": "return {\n    topic: msg.topic,\n    payload:{\n        topic           : msg.topic,\n        payload         : msg.payload,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1240,
        "y": 320,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "773bf8af.2ab458",
        "type": "template",
        "z": "ca529822.9112f8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }",
        "output": "str",
        "x": 290,
        "y": 40,
        "wires": [
            [
                "a800f1ce.4bf1f"
            ]
        ]
    },
    {
        "id": "ad1e39d.01622c8",
        "type": "function",
        "z": "ae804a7e.55fe08",
        "name": "Device Updated",
        "func": "return {\n    topic: 'deviceUpdated',\n    payload:{\n        topic           : 'deviceUpdated',\n        payload         : msg.payload,\n        userID          : msg.userID,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 480,
        "wires": [
            [
                "26454da1.bec2a2"
            ]
        ]
    },
    {
        "id": "e020461d.044ee8",
        "type": "function",
        "z": "e17f7487.2a78e8",
        "name": "Check if Device Exists",
        "func": "if (msg.payload.length < 1) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 520,
        "y": 120,
        "wires": [
            [
                "72c58cab.a3c494"
            ]
        ]
    },
    {
        "id": "6571c773.dbc138",
        "type": "batch",
        "z": "e17f7487.2a78e8",
        "name": "",
        "mode": "interval",
        "count": 10,
        "overlap": 0,
        "interval": "2",
        "allowEmptySequence": false,
        "topics": [],
        "x": 260,
        "y": 40,
        "wires": [
            [
                "a56beba4.f70678"
            ]
        ]
    },
    {
        "id": "82512660.676e48",
        "type": "function",
        "z": "372efc91.0669c4",
        "name": "Add New Field To All devices",
        "func": "var newMsg = \n{\n    'topic'           : 'addNewFieldToAllDevices',\n    'query'           : {},\n    'payload'         : \n    {\n        '$set'  :\n        { \n            'lastArchive'  :   0\n        }\n    }\n};\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 180,
        "wires": [
            [
                "4ca98264.cfe27c"
            ]
        ]
    },
    {
        "id": "703bbb91.15a4f4",
        "type": "inject",
        "z": "372efc91.0669c4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "82512660.676e48"
            ]
        ]
    },
    {
        "id": "4ca98264.cfe27c",
        "type": "mongodb out",
        "z": "372efc91.0669c4",
        "mongodb": "a77ab212.bfa86",
        "name": "",
        "collection": "devices",
        "payonly": false,
        "upsert": false,
        "multi": true,
        "operation": "update",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "81e459d7.5a22e8",
        "type": "mongodb in",
        "z": "372efc91.0669c4",
        "mongodb": "a77ab212.bfa86",
        "name": "Count records",
        "collection": "archiver",
        "operation": "count",
        "x": 620,
        "y": 380,
        "wires": [
            [
                "674d474e.2b5768"
            ]
        ]
    },
    {
        "id": "674d474e.2b5768",
        "type": "debug",
        "z": "372efc91.0669c4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 380,
        "wires": []
    },
    {
        "id": "6ce5867.f171578",
        "type": "inject",
        "z": "372efc91.0669c4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 380,
        "wires": [
            [
                "d9aa0caa.0bfdc"
            ]
        ]
    },
    {
        "id": "d9aa0caa.0bfdc",
        "type": "function",
        "z": "372efc91.0669c4",
        "name": "Last 2 Weeks",
        "func": "var stopTime = new Date().getTime();\nvar startTime = stopTime - 2 * 168 * 3600000\nvar newMsg = \n{\n    payload         : \n    {\n        time    :   {'$gt': startTime, '$lt': stopTime},\n    },\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 380,
        "wires": [
            [
                "81e459d7.5a22e8"
            ]
        ]
    },
    {
        "id": "8ff673f5.a569c",
        "type": "mongodb in",
        "z": "372efc91.0669c4",
        "mongodb": "a77ab212.bfa86",
        "name": "Count records",
        "collection": "archiver",
        "operation": "count",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "c79c765.d41c188"
            ]
        ]
    },
    {
        "id": "c79c765.d41c188",
        "type": "debug",
        "z": "372efc91.0669c4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 480,
        "wires": []
    },
    {
        "id": "8f76a21a.6337f",
        "type": "inject",
        "z": "372efc91.0669c4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 240,
        "y": 480,
        "wires": [
            [
                "3b26db71.18d874"
            ]
        ]
    },
    {
        "id": "3b26db71.18d874",
        "type": "function",
        "z": "372efc91.0669c4",
        "name": "Before last 2 weeks",
        "func": "var stopTime = new Date().getTime();\nvar startTime = stopTime - 2 * 168 * 3600000\nvar newMsg = \n{\n    payload         : \n    {\n        time    :   {'$lt': startTime},\n    },\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 480,
        "wires": [
            [
                "8ff673f5.a569c"
            ]
        ]
    },
    {
        "id": "9a0dc863.93bc48",
        "type": "inject",
        "z": "372efc91.0669c4",
        "name": "Every 24 hours",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": "100",
        "x": 260,
        "y": 560,
        "wires": [
            [
                "23a26ba7.3d19d4"
            ]
        ]
    },
    {
        "id": "23a26ba7.3d19d4",
        "type": "function",
        "z": "372efc91.0669c4",
        "name": "2 Weeks Past",
        "func": "var stopTime = new Date().getTime();\nvar startTime = stopTime - 2 * 168 * 3600000;\nvar newMsg = \n{\n    payload         : \n    {\n        time    :   {'$lt': startTime},\n    },\n};\n\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 560,
        "wires": [
            [
                "34b78cac.30b754"
            ]
        ]
    },
    {
        "id": "34b78cac.30b754",
        "type": "mongodb out",
        "z": "372efc91.0669c4",
        "mongodb": "a77ab212.bfa86",
        "name": "Remove old records",
        "collection": "archiver",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 660,
        "y": 560,
        "wires": []
    },
    {
        "id": "79b7f267.fdb1bc",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 790,
        "y": 40,
        "wires": [
            [
                "2f9b39bb.066866"
            ]
        ]
    },
    {
        "id": "dd376e6c.bcd2b",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Foot -->\n    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "79b7f267.fdb1bc"
            ]
        ]
    },
    {
        "id": "3ce8d4f.98b7d2c",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Head -->\n    <meta charset=\"UTF-8\"/>\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 550,
        "y": 40,
        "wires": [
            [
                "dd376e6c.bcd2b"
            ]
        ]
    },
    {
        "id": "f14ecc5f.7d313",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <div class=\"row\">\n            <div class=\"col-md-2\" style=\"text-align: left\">\n                <a href='/' >\n                    <img src=\"/img/home.png\" height=\"75px\"/>\n                </a>\n            </div>\n            <div class=\"col-md-8\" style=\"text-align: center\">\n                <h1 class=\"jumbotron-title big-text bold-text\">{{{payload.title}}}</h1>\n            </div>\n            <div class=\"col-md-2\" style=\"text-align: right\">\n                <a href='https://www.blinky-lite.io/' target='_blank'>\n                    <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 420,
        "y": 40,
        "wires": [
            [
                "3ce8d4f.98b7d2c"
            ]
        ]
    },
    {
        "id": "2f9b39bb.066866",
        "type": "http response",
        "z": "5c204860.bb24a8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 40,
        "wires": []
    },
    {
        "id": "62459d79.bdca54",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }",
        "output": "str",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "d8dfa81.9963658"
            ]
        ]
    },
    {
        "id": "d8dfa81.9963658",
        "type": "template",
        "z": "5c204860.bb24a8",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Utility Scripts\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }",
        "output": "str",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "f14ecc5f.7d313"
            ]
        ]
    },
    {
        "id": "b58cd7b4.d38278",
        "type": "http in",
        "z": "bee07e0a.32a9",
        "name": "/blinky-lite-demo-2",
        "url": "/blinky-lite-demo-2",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "a3d025e8.990638"
            ]
        ]
    },
    {
        "id": "fe29128c.529e1",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.control}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 730,
        "y": 300,
        "wires": [
            [
                "d0478d9.2f5e87"
            ]
        ]
    },
    {
        "id": "a23dd3d3.8e283",
        "type": "websocket out",
        "z": "bee07e0a.32a9",
        "name": "/blinky-lite-demo-2/websocket",
        "server": "d8c18f23.a32de",
        "client": "",
        "x": 630,
        "y": 880,
        "wires": []
    },
    {
        "id": "257d1af3.ae6df6",
        "type": "function",
        "z": "bee07e0a.32a9",
        "name": "Parse Readings",
        "func": "if ( (msg.topic == 'greenReadings') || (msg.topic == 'redReadings') )\n{\n    var readings = \n    {\n        \"photoDetValue\"         : {},\n        \"ultraDistance\"         : {},\n        \"tempAvg\"               : {},\n        \"ledState\"              : {},\n        \"ledValue\"              : {},\n        \"ledPeriod\"             : {},\n        \"ultraDistanceAlarm\"    : {},\n    };\n    var deviceAttr =\n    {\n        \"photoDetValue\"         : {'device':'photoDet', 'attr':'value'},\n        \"ultraDistance\"         : {'device':'ultraDistance', 'attr':'value'},\n        \"tempAvg\"               : {'device':'temperature', 'attr':'average'},\n        \"ledState\"              : {'device':'led', 'attr':'state'},\n        \"ledValue\"              : {'device':'led', 'attr':'value'},\n        \"ledPeriod\"             : {'device':'led', 'attr':'period'},\n        \"ultraDistanceAlarm\"    : {'device':'ultraDistance', 'attr':'alarm'},\n        \n    };\n\n    for (var key in readings)\n    {\n        var icount = 0;\n        while (icount < msg.payload.length)\n        {\n            if ( (msg.payload[icount].device == deviceAttr[key].device) \n                && (msg.payload[icount].attr == deviceAttr[key].attr) )\n            {\n                readings[key] = msg.payload[icount]\n                icount = msg.payload.length;\n            }\n            ++icount;\n        }\n    }\n    return {topic:msg.topic, payload:{topic:'readings', payload:readings}};    \n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 840,
        "wires": [
            [
                "670ad80c.006008"
            ]
        ]
    },
    {
        "id": "37cc8d61.e04342",
        "type": "status",
        "z": "bee07e0a.32a9",
        "name": "Socket Status",
        "scope": [
            "a23dd3d3.8e283",
            "b62e337d.c978e"
        ],
        "x": 150,
        "y": 660,
        "wires": [
            [
                "4a7a4cb2.4d2a94"
            ]
        ]
    },
    {
        "id": "4a7a4cb2.4d2a94",
        "type": "function",
        "z": "bee07e0a.32a9",
        "name": "Check Socket Status",
        "func": "var newMsg = null;\nif (msg.status.text.indexOf(\"connected \") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'connected'};\n}\nif (msg.status.text.indexOf(\"common.status.disconnected\") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'disconnected'};\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 660,
        "wires": [
            [
                "d88ea54a.9825f8"
            ]
        ]
    },
    {
        "id": "d88ea54a.9825f8",
        "type": "function",
        "z": "bee07e0a.32a9",
        "name": "Allow Database poll",
        "func": "if (msg.topic == 'socketStatus')\n{\n    context.set('socketStatus', msg.payload);\n    return null;\n}\nif (msg.topic == 'pollDatabase')\n{\n    var socketStatus = context.get('socketStatus');\n    if (socketStatus == undefined) return null;\n    if (socketStatus == 'connected') return {topic:'databasePoll', payload:true};\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 660,
        "wires": [
            [
                "74abb145.396d6"
            ]
        ]
    },
    {
        "id": "7d3a91e0.1f284",
        "type": "inject",
        "z": "bee07e0a.32a9",
        "name": "",
        "topic": "pollDatabase",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "d88ea54a.9825f8"
            ]
        ]
    },
    {
        "id": "1fa50b75.033535",
        "type": "websocket in",
        "z": "bee07e0a.32a9",
        "name": "",
        "server": "d8c18f23.a32de",
        "client": "",
        "x": 220,
        "y": 1060,
        "wires": [
            [
                "72006e21.cd8b1"
            ]
        ]
    },
    {
        "id": "72006e21.cd8b1",
        "type": "json",
        "z": "bee07e0a.32a9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "96a71cea.e6463"
            ]
        ]
    },
    {
        "id": "57bb1074.e4ccc",
        "type": "function",
        "z": "bee07e0a.32a9",
        "name": "Parse msg",
        "func": "return {topic:msg.payload.mqttMessage.topic, payload:msg.payload.mqttMessage.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 1040,
        "wires": [
            [
                "46065b16.049ec4"
            ]
        ]
    },
    {
        "id": "d0478d9.2f5e87",
        "type": "subflow:5c204860.bb24a8",
        "z": "bee07e0a.32a9",
        "name": "",
        "x": 890,
        "y": 300,
        "wires": []
    },
    {
        "id": "dbf8ae5b.43bb9",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.vertbarWidget}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.docReady}}}\n{{{payload.script.socket}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.setDistAlarm}}}\n{{{payload.script.setBlinkMode}}}",
        "output": "str",
        "x": 290,
        "y": 500,
        "wires": [
            [
                "2b6515dd.3849fa"
            ]
        ]
    },
    {
        "id": "74abb145.396d6",
        "type": "function",
        "z": "bee07e0a.32a9",
        "name": "Prepare Readings Query",
        "func": "var msg1 = \n{\n    topic           : 'greenReadings',\n    payload         : \n    {\n        sys01   : \"blinky-lite\",\n        sys02   : \"demo\",\n        sys03   : \"breadboard\",\n        sys04   : \"green\",\n        prop    : \"reading\"\n    }\n};\nvar msg2 = \n{\n    topic           : 'redReadings',\n    payload         : \n    {\n        sys01   : \"blinky-lite\",\n        sys02   : \"demo\",\n        sys03   : \"breadboard\",\n        sys04   : \"red\",\n        prop    : \"reading\"\n    }\n};\nreturn [msg1,msg2];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 290,
        "y": 720,
        "wires": [
            [
                "7fbb6264.70428c"
            ],
            [
                "7fbb6264.70428c"
            ]
        ]
    },
    {
        "id": "dc55c2e6.30bed",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "GaugeWidget",
        "field": "payload.script.gaugeWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor, size:gaugeConfig.textsize},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + gaugeConfig.unit,\n                            font: {color: valueColor, size:gaugeConfig.textsize},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 740,
        "y": 40,
        "wires": [
            [
                "4164cf19.fd4e6"
            ]
        ]
    },
    {
        "id": "a5ebb87f.f33cc8",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "StripChart Widget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right'\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace1Color}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace2Color}\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace2.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 750,
        "y": 160,
        "wires": [
            [
                "9c634ad0.82b288"
            ]
        ]
    },
    {
        "id": "96a71cea.e6463",
        "type": "switch",
        "z": "bee07e0a.32a9",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 1040,
        "wires": [
            [
                "57bb1074.e4ccc"
            ]
        ]
    },
    {
        "id": "a3d025e8.990638",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Set Device Leader to 2",
        "field": "payload.script.deviceLeader",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "'archiver/blinky-lite/demo/breadboard/red/'",
        "output": "str",
        "x": 380,
        "y": 80,
        "wires": [
            [
                "544dbf21.d9f3a"
            ]
        ]
    },
    {
        "id": "670ad80c.006008",
        "type": "switch",
        "z": "bee07e0a.32a9",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "greenReadings",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "redReadings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 840,
        "wires": [
            [
                "b62e337d.c978e"
            ],
            [
                "a23dd3d3.8e283"
            ]
        ]
    },
    {
        "id": "544dbf21.d9f3a",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Title 2",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Red Gizmo",
        "output": "str",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "dc55c2e6.30bed"
            ]
        ]
    },
    {
        "id": "f1537b84.36b6b8",
        "type": "http in",
        "z": "bee07e0a.32a9",
        "name": "/blinky-lite-demo-1",
        "url": "/blinky-lite-demo-1",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 40,
        "wires": [
            [
                "279d94f.cc24d6c"
            ]
        ]
    },
    {
        "id": "279d94f.cc24d6c",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Set Device Leader to 1",
        "field": "payload.script.deviceLeader",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "'archiver/blinky-lite/demo/breadboard/green/'",
        "output": "str",
        "x": 380,
        "y": 40,
        "wires": [
            [
                "ae83df4.7ae512"
            ]
        ]
    },
    {
        "id": "ae83df4.7ae512",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Title 1",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Green Gizmo",
        "output": "str",
        "x": 550,
        "y": 40,
        "wires": [
            [
                "dc55c2e6.30bed"
            ]
        ]
    },
    {
        "id": "b62e337d.c978e",
        "type": "websocket out",
        "z": "bee07e0a.32a9",
        "name": "/blinky-lite-demo-1/websocket",
        "server": "92cdecbf.0d545",
        "client": "",
        "x": 630,
        "y": 800,
        "wires": []
    },
    {
        "id": "737a93a0.060c1c",
        "type": "websocket in",
        "z": "bee07e0a.32a9",
        "name": "",
        "server": "92cdecbf.0d545",
        "client": "",
        "x": 220,
        "y": 1000,
        "wires": [
            [
                "72006e21.cd8b1"
            ]
        ]
    },
    {
        "id": "2b6515dd.3849fa",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Dashboard HTML",
        "field": "payload.html.dashboard",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class='col-md-12' align='center'>\n                                <div id=\"tempAvgBarPlot\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class='col-md-12' align='center'>\n                                <div id=\"distGaugePlot\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class='col-md-12' align='center'>\n                                <div id=\"photoGaugePlot\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 550,
        "y": 260,
        "wires": [
            [
                "8fe64db0.63e98"
            ]
        ]
    },
    {
        "id": "8fe64db0.63e98",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Control HTML",
        "field": "payload.html.control",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='30%'>\n                                        <span class='big-text'>Blink Mode</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn card-button btn-block big-text' onclick=\"setBlinkMode(-1)\">&#9660</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='big-text bold-text' id='blinkMode' >Off</span>\n                                    </td>\n                                    <td width='25%'>\n                                        <button class='btn card-button btn-block big-text' onclick=\"setBlinkMode(1)\">&#9650;</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='big-text'>Led Brightness (%)</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='big-text bold-text' id='ledBrightness'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"ledBrightnessSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='big-text'>Led Period (100-2000mS)</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='big-text bold-text' id='ledPeriod'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"ledPeriodSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <span class='big-text' id='distAlarmHeading'>Distance Alarm Setting</span>\n                        </div>\n                        <div class='row'>\n                            <div class='col-md-6'>\n                                <input id=\"distAlarm\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"distAlarmChange()\"/>\n                            </div>\n                            <div class='col-md-6'>\n                                <button class='btn btn-block card-button big-text' id=\"distAlarmButton\" onclick=\"distAlarm()\" >&#10003;</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "7b8af7be.987058"
            ]
        ]
    },
    {
        "id": "7b8af7be.987058",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "History HTML",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"tempPhotoStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "fe29128c.529e1"
            ]
        ]
    },
    {
        "id": "9c634ad0.82b288",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Global Javascript",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var ws;\n        var retries = 0;\n        var userID = -1;\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Photo (%)',\n            trace2Color : '#f2a321',\n            trace2GridColor : '#f8d8a0',\n            plotLength  : 600,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'tempPhotoStripChart'\n        };\n        var ledBrightnessSliderMoved = false;\n        var ledPeriodSliderMoved = false;\n\n        let tempPhotoStripChart = new StripChart(plotConfig);\n        var distAlarmChanged = false;\n        var ultraDistanceReading = {};\n",
        "output": "str",
        "x": 210,
        "y": 260,
        "wires": [
            [
                "93cbfde.a1a6"
            ]
        ]
    },
    {
        "id": "93cbfde.a1a6",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Doc Ready Javascript",
        "field": "payload.script.docReady",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Doc Ready Javascript\n        $( document ).ready(function()\n        {\n            userID  = Math.floor(Math.random() * 4096);\n            wsConnectC();\n            $('#distAlarmButton').hide();\n            $( function() \n            {\n                $( \"#ledBrightnessSlider\" ).slider(\n                    {\n                        stop    :   function( event, ui ) \n                                    {\n                                        $('#ledBrightness').hide();\n                                        var ledValue = Math.round(2.55 * ui.value);\n                                        ws.send(JSON.stringify(\n                                            {\n                                                topic       : 'sendSettingToMqtt',\n                                                mqttMessage :\n                                                {\n                                                    topic   : {{{payload.script.deviceLeader}}} + 'led/value/setting',\n                                                    payload :  {type : 'scalar',value : ledValue} \n                                                }\n                                                \n                                            }));\n                                        setTimeout(function()\n                                        {\n                                            ledBrightnessSliderMoved = false; \n                                            $('#ledBrightness').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){ledBrightnessSliderMoved = true},\n                    });\n            } );\n            $(\"#ledBrightnessSlider\").children(\"div\").css(\"background\",\"red\");\n            $( function() \n            {\n                $( \"#ledPeriodSlider\" ).slider(\n                    {\n                        height: 100,\n                        stop    :   function( event, ui ) \n                                    {\n                                        $('#ledPeriod').hide();\n                                        var ledPeriod = Math.round(19 *  ui.value + 100);\n                                        ws.send(JSON.stringify(\n                                            {\n                                                topic       : 'sendSettingToMqtt',\n                                                mqttMessage :\n                                                {\n                                                    topic   : {{{payload.script.deviceLeader}}} + 'led/period/setting',\n                                                    payload :  {type : 'scalar',value : ledPeriod} \n                                                }\n                                                \n                                            }));\n                                        setTimeout(function()\n                                        { \n                                            ledPeriodSliderMoved = false; \n                                            $('#ledPeriod').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){ledPeriodSliderMoved = true;},\n                    });\n            } );\n         });\n",
        "output": "str",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "78a4bbdc.7d6434"
            ]
        ]
    },
    {
        "id": "78a4bbdc.7d6434",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Socket Connect JavaScript",
        "field": "payload.script.socket",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Socket Connect JavaScript\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                switch(msg.topic)\n                {\n                    case 'readings':\n                        updateDmaReadings(msg.payload);\n                        break;\n                    default:\n                    // code block\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket disconnected\");\n            };\n        }\n",
        "output": "str",
        "x": 240,
        "y": 340,
        "wires": [
            [
                "a6a22bae.cd8cc8"
            ]
        ]
    },
    {
        "id": "a6a22bae.cd8cc8",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Update Readings Javascript",
        "field": "payload.script.updateReadings",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Update Readings Javascript\n        function updateDmaReadings(data)\n        {\n            ultraDistanceReading = data.ultraDistance;\n            if (!distAlarmChanged) $('#distAlarm').val(data.ultraDistanceAlarm.value);\n            $('#distAlarmHeading').html('Distance Alarm Setting (' + data.ultraDistance.lolo.toString() + ' - ' + data.ultraDistance.high.toString() + ' cm)');\n            var distGaugeConfig = \n                {\n                    lolo            : data.ultraDistance.lolo, \n                    low             : data.ultraDistanceAlarm.value, \n                    high            : data.ultraDistance.high, \n                    hihi            : data.ultraDistance.hihi, \n                    value           : data.ultraDistance.value, \n                    unit            : data.ultraDistance.unit,\n                    textsize        : 38,\n                    label           : 'Distance', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#00ff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'distGaugePlot'\n                };\n            setGaugeWidget(distGaugeConfig);\n            var photoGaugeConfig = \n                {\n                    lolo            : data.photoDetValue.lolo, \n                    low             : data.photoDetValue.low, \n                    high            : data.photoDetValue.high, \n                    hihi            : data.photoDetValue.hihi, \n                    value           : data.photoDetValue.value, \n                    unit            : data.photoDetValue.unit, \n                    textsize        : 38,\n                    label           : 'Photo', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ffff00', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    size            : 800, \n                    htmlId          : 'photoGaugePlot'\n                };\n            setGaugeWidget(photoGaugeConfig);\n            var tempAvgBarConfig = \n                {\n                    lolo            : data.tempAvg.lolo, \n                    low             : data.tempAvg.low, \n                    high            : data.tempAvg.high, \n                    hihi            : data.tempAvg.hihi, \n                    value           : data.tempAvg.value, \n                    unit            : data.tempAvg.unit, \n                    textsize        : 38,\n                    label           : 'tempAvg', \n                    lowColor        : '#ffff00', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#9eb5c7', \n                    labelColor      : '#000000', \n                    gridColor       : '#ffffff',\n                    height          : 300, \n                    htmlId          : 'tempAvgBarPlot'\n                };\n            setHorzBarWidget(tempAvgBarConfig);\n            tempPhotoStripChart.addTracePoints(data.tempAvg.value, data.photoDetValue.value);\n            \n            var blinkMode = 'Off';\n            if (data.ledState.value == 1) blinkMode = 'Blink';\n            if (data.ledState.value == 2) blinkMode = 'On';\n            $('#blinkMode').html(blinkMode);\n            \n            if (!ledBrightnessSliderMoved)\n            {   \n                var ledBrightness = Math.round(100.0 * data.ledValue.value / 255);\n                $('#ledBrightness').html(ledBrightness);\n                $('#ledBrightnessSlider' ).slider( \"value\", ledBrightness );\n            }\n\n            if (!ledPeriodSliderMoved)\n            {   \n                $('#ledPeriod').html(data.ledPeriod.value);\n                $('#ledPeriodSlider' ).slider( \"value\", Math.round((data.ledPeriod.value - 100.0) / 19.0) );\n            }\n        }\n",
        "output": "str",
        "x": 240,
        "y": 380,
        "wires": [
            [
                "1abbf10.c8f170f"
            ]
        ]
    },
    {
        "id": "1abbf10.c8f170f",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Set Blink Mode JavaScript",
        "field": "payload.script.setBlinkMode",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Set Blink Mode JavaScript\n        function setBlinkMode(up)\n        {\n            var blinkModeText = $('#blinkMode').text();\n            var blinkMode = 0;\n            if (blinkModeText == 'Blink')  blinkMode = 1;\n            if (blinkModeText == 'On')  blinkMode = 2;\n            blinkMode = blinkMode + up;\n            if (blinkMode > 2) blinkMode = 0;\n            if (blinkMode < 0) blinkMode = 2;\n            ws.send(JSON.stringify(\n                {\n                    topic       : 'sendSettingToMqtt',\n                    mqttMessage :\n                    {\n                        topic   : {{{payload.script.deviceLeader}}} + 'led/state/setting',\n                        payload :  {type : 'scalar',value : blinkMode}\n                    }\n                    \n                }));\n        }\n",
        "output": "str",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "3d476e97.4a7a62"
            ]
        ]
    },
    {
        "id": "7fbb6264.70428c",
        "type": "mongodb in",
        "z": "bee07e0a.32a9",
        "mongodb": "a77ab212.bfa86",
        "name": "Find in device db",
        "collection": "devices",
        "operation": "find",
        "x": 530,
        "y": 720,
        "wires": [
            [
                "257d1af3.ae6df6"
            ]
        ]
    },
    {
        "id": "46065b16.049ec4",
        "type": "mqtt out",
        "z": "bee07e0a.32a9",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "84d80994.260508",
        "x": 830,
        "y": 1040,
        "wires": []
    },
    {
        "id": "7be3972b.a8fdd8",
        "type": "http in",
        "z": "3b1dee12.2d18d2",
        "name": "HTTP GET",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "bf7c3c16.b54f6"
            ]
        ]
    },
    {
        "id": "cfa594f8.b588b8",
        "type": "template",
        "z": "3b1dee12.2d18d2",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/blinky-lite-demo-1\" >Green Gizmo</a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/blinky-lite-demo-2\" >Red Gizmo</a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12' align='center' >\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/core\" id=\"blinky-lite-core\">Blinky-Lite Core</a> \n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 350,
        "y": 60,
        "wires": [
            [
                "abf93fa9.b41ec"
            ]
        ]
    },
    {
        "id": "bf7c3c16.b54f6",
        "type": "template",
        "z": "3b1dee12.2d18d2",
        "name": "Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky-Lite Demo",
        "output": "str",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "cfa594f8.b588b8"
            ]
        ]
    },
    {
        "id": "abf93fa9.b41ec",
        "type": "subflow:5c204860.bb24a8",
        "z": "3b1dee12.2d18d2",
        "name": "",
        "x": 510,
        "y": 60,
        "wires": []
    },
    {
        "id": "4164cf19.fd4e6",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Vert Bar Widget",
        "field": "payload.script.vertbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Bar Widget\n        function setVertBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                x: ['', barConfig.label],\n                y: [ barConfig.low, lowValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n                width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n                width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.hihi - barConfig.high, highValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n                width: [0.1, 1.0],\n            };\n            \n            var data = [lowBar, mediumBar, highBar];\n            \n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 80, //top margin\n                            l: 80, //left margin\n                            r: 20, //right margin\n                            b: 60 //bottom margin\n                        },\n                    height: barConfig.height,\n                    width: barConfig.width,\n                    title: \n                        {\n                            text: barConfig.value.toString() + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    xaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    yaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize}\n                        },\n                };\n            \n            Plotly.newPlot(barConfig.htmlId, data, layout, {'displayModeBar': false});\n        }",
        "output": "str",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "a4bafe5c.807d1"
            ]
        ]
    },
    {
        "id": "a4bafe5c.807d1",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "Horz Bar Widget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 70, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 70 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n        \n        \n        \n        \n        \n    \n",
        "output": "str",
        "x": 740,
        "y": 120,
        "wires": [
            [
                "a5ebb87f.f33cc8"
            ]
        ]
    },
    {
        "id": "3d476e97.4a7a62",
        "type": "template",
        "z": "bee07e0a.32a9",
        "name": "setDistAlarm",
        "field": "payload.script.setDistAlarm",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        function distAlarmChange()\n        {\n            distAlarmChanged = true;\n            $('#distAlarmButton').show();\n\n        }\n\n        function distAlarm()\n        {\n            $('#distAlarmButton').hide();\n            if (isNaN($('#distAlarm').val()))\n            {\n                distAlarmChanged = false;\n                return;\n            }\n            var distAlarm = Number($('#distAlarm').val());\n            if ( (ultraDistanceReading.lolo < distAlarm) && (distAlarm < ultraDistanceReading.high) )\n            {\n                ws.send(JSON.stringify(\n                    {\n                        topic   : 'sendSettingToMqtt',\n                        mqttMessage :\n                        {\n                            topic       : {{{payload.script.deviceLeader}}} + 'ultraDistance/alarm/setting',\n                            payload     : {type : 'scalar', value : distAlarm}\n                        }\n                        \n                    }));\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Ramp Up Time entry outside range! (' + ultraDistanceReading.lolo.toString() + '-' + ultraDistanceReading.high.toString() + ' cm)');\n            }\n            distAlarmChanged = false;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 460,
        "wires": [
            [
                "dbf8ae5b.43bb9"
            ]
        ]
    }
]